[
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "resume",
    "section": "",
    "text": "Download Resume Here"
  },
  {
    "objectID": "resume.html#projects",
    "href": "resume.html#projects",
    "title": "resume",
    "section": "PROJECTS",
    "text": "PROJECTS\n\nANALYZING GREENNESS THROUGH NDVI IN REDLINED AREAS IN PHILADELPHIA, PA\n(4/22–6/22)\n\nUndergraduate Poster Presentation Role: Team Lead\n• Pre-processing (crop, mask, reclassify, NDVI calculation) of Landsat 8 OLI satellite data through Rstudio\n• Qgis processing of NDVI raster calculations, zonal statistics and write memory function.\n• Exploratory data analysis of U.S. Census median income data, NDVI data, and HOCL Redline data combined and processed through RStudio, Qgis and Excel.\n\n\n\nLogistics Experience\n\n\nGeneral Warehouse Worker – Best Buy, Los Angeles, CA (9/18/-9/21)\n• Ensures daily home deliveries for all Southern California locations are correctly loaded.\n• Safeguard that defective and returned products are accurately processed and prepped for relocation.\n• Routes orders by locating the specified product and moving it to the loading dock\n\n\nSWAT Inventory Specialist – Best Buy, Los Angeles, CA (5/2010 – 11/2015)\n• Responsible for counting assigned product counts, entering counts into RSS, researching variances, and reporting discrepancies to management. Oversaw and prepared for annual physical inventory and assisted in post physical inventory reconciliation.\n• Supported senior management by delivering reports outlining performance to drive process improvements.\n• Coached employees around shrink trends and behaviors by communicating and coaching store employees and leadership on the importance of inventory integrity and any identified process gaps)"
  },
  {
    "objectID": "posts/redlining_NDVI/index.html",
    "href": "posts/redlining_NDVI/index.html",
    "title": "Analyzing Greenness through NDVI in Redlined areas in Philadelphia, Pennsylvania",
    "section": "",
    "text": "Methods\n\n\n\nHOCL Grades\nRedlining is a discriminatory practice that assigned neighborhood gradings (A-D) based on desirability\\(^1\\):\nA = Best\nB = Still Desirable\nC = Declining\nD = Hazardous\nMortgage lender denied loans and/or restricted services to certain areas of a community, often because of the racial characteristics of the applicant’s neighborhood included into the grading such as:\n• “Undesirable negro section of very poor property”\n• “Concentration of undesirables. Low class whites and negro”\n\n\n\nRedline regions were overlayed over Philadelphia to determine areas of analysis\n\n\n\n\nGreenness Over Time, 1990 - 2020\nChange detection of vegetation was performed by loading 1990 mean NDVI in red channel and 2020 mean NDVI in blue and green channels.\n\n2020 increases in vegetation are observed in central region and Northwest and Southeast boundaries Urban areas in southern portion show very little change of vegetation on both sides of river since 1990\n\n\n\nFigure 1: Comparison of average NDVI and percent difference show all areas experience a decrease in NDVI with Grade “A” regions exhibiting the most loss followed by “D” grade regions\n\n\n\n\nNDVI and Household Median Income\nThe analysis was performed by selecting only areas ‘A’, ‘D’, and the areas outside the redlining to compare the relationship between NDVI and Median Income in 1990, 2000, 2010, and 2020.\nIn 1990, the NDVI was higher (≈ 0.25 – 0.4), and median income was lower (≈ $ 25,000). In 2000, the NDVI started to continuously decrease (≈ 0.18 – 0.27) till 2020 in all areas, as median income keeps increasing (≈ $ 54,000).\n\n\n\n\nFigure 2: The correlation between mean NDVI and median household income is inversely proportional. As income increases, NDVI decreases in the three areas over the decades.\n\n\nChange in NDVI between 1990 and 2020 becomes less linear since the Census tracts that lost the most greenness was composed of areas ‘A’. While areas ‘D’ experienced a smaller, but still significant, decrease in greenness as well.\n\n\n\n\nFigure 3: Average NDVI and the median income of each redline block that comprises areas ‘A’ and ‘D’.\n\n\n\n\nNDVI and Disability\nFive different study areas:\n• D Group\n• A Group\n• Census tract that lies outside of Redline area\n• D Group based on HOLC grade\n\nResults:\n• D Group has lowest mean NDVI, and high number of disabled people compared to A Group\n• A Group has highest mean NDVI and lowest number of disability reports\n• In the urban center, also has low NDVI and high number of disabilities reported\n\n\n\nFigure 4: Graph showing both the mean NDVI in 2020 with the red line and the number of disability reports in 2020 with the blue bar\n\n\n\n\nConclusion\nFor general trends, the data showed that average NDVI for areas with a grade of “A” showed the most loss over 4 decades. Areas graded “D” showed nearly the same amount of NDVI difference despite initially having much lower NDVI values in 1990. Median Household Income increases with lower mean NDVI values: this holds true in areas A, D and non-redlined zones. This is consistent with the findings from Casey et al. proving how urban greenness is unequally distributed with neighborhood demographics. Disability, followed areas of greater redlining (lower grades) and areas of lower NDVI values. Within redlined areas, all areas with “A” grades have significantly higher NDVI values, higher medium income and lower disability rates than all areas with a “D” grade. Overall, the presence of green areas in urban spaces have positive impacts to the individual, including lower rates of disabilities and higher median income levels. Areas that are within the redlined boundaries experience these lower standards of living compared to areas that are not redlined. City planners and local/state governments should increase greenness and promote social equity goals, especially in these disadvantaged communities.\n\n\nReferences\n\nNardone, Anthony, et al. “Redlines and Greenspace: The Relationship between Historical Redlining and 2010 Greenspace across the United States.” National Institute of Environmental Health Sciences, U.S. Department of Health and Human Services, 27 Jan.2021, https://ehp.niehs.nih.gov/doi/10.1289/EHP7495.\nCasey, J.A.; James, P.; Cushing, L.; Jesdale, B.M.; Morello-Frosch, R. Race, Ethnicity, Income Concentration and 10-Year Change in Urban Greenness in the United States. Int. J. Environ. Res. Public Health 2017, 14, 1546, doi.org/10.3390/ijerph14121546\nZhu, Anna et al. “Residential greenness, activities of daily living, and instrumental activities of daily living: A longitudinal cohort study of older adults in China.” Environmental epidemiology (Philadelphia, Pa.) vol. 3,5 e065. 14 Oct. 2019, doi:10.1097/EE9.0000000000000065"
  },
  {
    "objectID": "posts/stats_project/index.html#hocl-redlining",
    "href": "posts/stats_project/index.html#hocl-redlining",
    "title": "Statistical Analysis of NDVI in Redlined Regions",
    "section": "HOCL ‘Redlining’",
    "text": "HOCL ‘Redlining’\n‘Redlining’ is the term used for the racist, nativist, and class privileged maps and its grading system created by the Home Owners Loan corporation (HOCL) under the New Deal federal stimulus program of 1935. These HOCL grades and maps were used by mortgage lenders for decades furthering racial segregation and a disparity in financial resources\nA = Best\nB = Still Desirable\nC = Declining\nD = Hazardous\nExample of language used to describe region D: • “Undesirable negro section of very poor property”\n• “Concentration of undesirables. Low class whites and negro”\n\nQuestionDataAnalysis plan\n\n\nGreenness or green space is reflective of many different measures of quality of life, such as health disparities, racial residential segregation and urban heat islands, noise pollution, air quality, and lower income.\nUsing NDVI as a measure of greenness, the question is: How does NDVI change with income in the graded regions A and D of redlined maps in Philadelphia, PA?\n\n\n\n\n\n\n\n\nCalculate median NDVI for the years 1990, 2000, 2010, 2020 by U.S. census tract in each graded region.\nMedian Income by tract from U.S. Census\n\n\n\n\n\n\n\n\n\nExplore data\nOLS to examine if there is statisically significant relationship of income & grading on NDVI\nHypothesis testing comparing Mean NDVI based on grading and year."
  },
  {
    "objectID": "posts/field_report/index.html",
    "href": "posts/field_report/index.html",
    "title": "Field Methods In Hydrology - Field Report",
    "section": "",
    "text": "Introduction to general field techniques used in hydrology including methods to determine river discharge,basic well and spring sampling, well water level measurements, and soil hydraulic characterization. The ~1 week course took place at Sagehen Creek Field Station (north of Truckee, CA) in the eastern Sierra prior to the start of the 2021 Fall quarter under the guidance of Prof. Jordan Clark and teaching assistant Shelby Smith.\nView and Download Writing Sample Here"
  },
  {
    "objectID": "posts/SMB/index.html",
    "href": "posts/SMB/index.html",
    "title": "Remote Sensing of Chlorophyll-a Using Landsat 8",
    "section": "",
    "text": "Data\nIn-situ measurements of the study were taken before, during, and after the wastewater diversion event along a grid of 13 stations between August 26th and November 11th and, when possible, coinciding during satellite overpass in the SMB. At all stations, hydrographic profiles were collected using an SBE 19-plus Conductivity-Temperature-Depth package with chlorophyll fluorescence collected from 1m below the surface to 1m above the ocean floor. In-situ surface chlorophyll-a concentrations were derived from water samples taken on ten different dates at selected stations. Water samples were taken at 1 meter and analyzed fluorometrically for chl-a in a laboratory using a non-acidification method for 96 measurements. In-situ hyperspectral remote sensing reflectance was measured and derived from field measurements of spectral downwelling and upwelling irradiance using a Satlantic HyperPRO free-falling optical profiler equipped with a surface irradiance reference for a total of 49 measurements on nine separate dates. Level 1 satellite data was acquired from Landsat 8 from OLI, TIRS sensors, and level 1 satellite data from Aqua MODIS, TIR sensors.\nThe analysis extension uses Landsat 8 OLI Level-2 surface reflectance products on six dates from June 6th to November 11th, 2021. Level-2 products are corrected for the temporally, spatially, and spectrally varying scattering and absorbing effects of atmospheric gases,aerosols, and water vapor. All images acquired from USGS are centered on 33°10’36.66”N – 118°42’58.32”W, on path 41 row 37 with a WGS84 datum and ellipsoid, on a U1TM Zone 11 projection.\n\n\nMethod\nUsing 36 measurements of in-situ data, two local chl-a algorithms were developed using respective blue and green wavebands of OLI and MODIS, where the natural log values of the measured surface chl-a concentrations are regressed on the natural log values of blue-green surface reflectance ratios (Figure 1).\n\nMODIS satellite data were used to produce a standard 1-km OC3M product (OC3M algorithm), a regional product (CALFIT algorithm), and application of their own locally derived algorithm to produce chl-a concentrations. Landsat 8 data retrievals from USGS were used to produce a standard OC2 chl-a product and application of their own locally derived algorithm to produce chl-a concentrations. To assess the accuracy of Landsat 8 (OC2) and MODIS (OC3M, CALFIT) algorithms to estimate chl-a concentrations, each algorithm was used with their respective blue-green wavebands (Figure 1) from in-situ measurements and compared to in-situ chl-a concentrations. Landsat 8 and MODIS surface reflectance data were applied to standard algorithms and the researcher’s local algorithm and compared against in-situ chl-a concentrations. A time-series analysis was completed using the local chl-a algorithm for OLI in which maximum chl-a concentrations for each OLI scene were found within Santa Monica Bay. Sea surface temperatures. Level 1 products of Landsat 8 and Aqua MODIS data were atmospherically corrected using a standard multi-scattering, radiative transfer model (TIRS), and iterative near-infrared (NIR) model (TIR). TIRS temperature was retrieved by inverting the atmospherically, and emissivity corrected TIRS radiances using a look-up table. Due to limitations of both OLI and MODIS accuracy and spatial extent of MODIS TIR, TIRS is only used to detect relative SST differences between plume and non-plume waters.\nThe extension of the analysis acquired images in 2021 on six different dates, July 6th and 22nd, August 7th, October 10th and 26th, and November 11th. The images acquired were the best available in the study area without cloud cover. Pre-processing was performed in R using library packages “rgdal” and “raster” the images of surface reflectance of bands 2-7 were stacked together by date. Each image was masked and cropped using a custom Shapefile derived from a Los Angeles County Shapefile, limiting the extent to the coastal waters of the SMB up to the coastline. Erroneous pixel values that do not fall within the valid range for the Landsat surface reflectance product were overwritten; the valid range for all bands 1-7 is 7273-43636. The scale factor of the images was changed to 100. A time-series analysis was produced using the researchers’ local OLI algorithm of chl-a concentrations applying blue and green bands of each image data and exported for use in Qgis.\n\n\nResults\nWastewater plume detection via sea surface temperature (SST) was clearly detected by Landsat 8 TIRS, showing the relative temperature difference between the wastewater plume and ambient waters. Before and after the diversion event, no SST anomalies were detected; during the diversion event, at the 1- mile outfall pipe, decreased SSTs were clearly detected ~1 °C colder than the surrounding water. Comparisons to in-situ data were not provided due to TIRS SST data providing skin surface temperature measurements of the top few millimeters of the ocean surface, and in-situ measurements were taken at depths greater than 1m below the surface.\nThe results of comparing estimated chl-a using standard algorithms and in-situ reflectance were reported as mean percent errors between estimated chl-a values and in-situ values. The OC2 algorithm had a ±40% mean percent error, the paper’s OLI local algorithm yielding a ±30% mean percent error using in-situ reflectance. The OC3M algorithm resulted in a ±35% mean percent error, with the regional CALFIT algorithm reported as more accurately estimating chl-a values but greatly overestimating high chl-a values. The derived local MODIS algorithm using in-situ reflectance resulted in estimated values with a mean percent error of ±32% of in-situ chl-a values. The standard algorithms tended to underestimate mid-level chl-a values and overestimate high chl-a values with respect to measured values, with the highest values falling well above the +30% error. The researcher’s local OLI algorithm was the best performing algorithm, with the lowest mean percent error and more accurate estimated chl-a values.\nThe researchers used the scenes of Landsat 8 and MODIS on November 11th, 2015, to apply both the local algorithm and the standard chl-a algorithms, as this was the only day the satellite data coincided with in-situ reflectance and chl-a measurements (Figure 2). Overall, OLI chl-a retrievals were more accurate than MODIS. The local OLI chl-a algorithm outperformed MODIS (local and OC3M) and OC2 algorithms with a mean percent error of ∼29% and the smallest RMSE of ∼0.36. The standard OC2 algorithm underestimated chl-a values and had a mean percent error of ∼26% and RMSE of ∼0.58. The local MODIS chl-a algorithm performed better than the OC3M algorithm but still overestimated chl-a concentrations with a mean percent error of ∼37% and RMSE of ∼0.67. The standard OC3M algorithm had a mean percent error of ∼349% and RMSE of∼18.2, performing order of magnitude poorer than the local MODIS chl-a algorithm and either OLI algorithm (local or OC2). Establishing that the researchers Local OLI algorithm performed best, a time series analysis was used to evaluate the chlorophyll-a evolution in response to the wastewater diversion event (Figure 2).\n\nThe time series analysis was extended to observe the chlorophyll-a evolution in response to the HPT failure on July 11th, 2021(Figure 3). An initial 17 million gallons (5 million were pumped back) of untreated sewage was discharged through the 1-mile outfall pipe, shown on the researcher’s time series as the shorter black line. Reports indicate that the plant operated at a diminished capacity afterward. To show the evolution of chlorophyll-a, the main images are set to the scale of 7-22, using a cumulative count cut of 2%- 98% to filter out outliers in minimum and maximum values. The top end of the green portion of the scale represents an ~3.0 mg m-3, comparable to the researcher’s time-series scale. The top inset of each image uses individual scales, using a cumulative count cut of 2%- 98% to filter out outliers in minimum and maximum values. Each image’s bottom inset uses a cumulative count cut of 2%- 94% using a true-color image emphasizing the ocean color.\n\nThe first image before HTP failure shows elevated chlorophyll-a beginning ~3-miles offshore at ~3.0 mg m-3 with pockets of higher values. The results on 07-22, eleven days after failure, are obfuscated by sporadic cloud coverage; despite this, there is evidence of elevated values of chl-a up against the coastline. In-situ measurements of chl-a concentrations could not be located to corroborate due to Covid-19 sampling restrictions; the only supporting evidence is a graph of Harmful algal blooms (HABs) (Figure 4) of Pseudo-nitzschia measured shortly up thecoast at the Santa Monica Pier. HABs of Pseudo-nitzschia can cause diseases and death in many marine organisms and the humans who consume them. HABs can result in oxygen depletion caused by increased biomass production (Timmerman, 2019). On 8-22, twenty-seven days after the massive HTP failure, chl-a concentration is still exceedingly high along the coastline. The final three images show an average of 1.74 mg m-3 along the coastline when compared to the researcher’s scale is still on the high end. The November spike of Pseudo-nitzschia supports that the diminished capacity of HTP may have influenced any natural variations of phytoplankton biomass.\n\n\n\nFigure 4: Measurements of HABs from Southern California Coastal Ocean Observing System. The focus is on July and November spikes.\n\n\n\n\nSummary\nThe researcher’s central finding is that applying their local chl-a algorithms, developed using in situ chl-a and in-situ reflectance measurements improves chl-a retrievals in the SMB during the 2015 HTP wastewater diversion in comparison to the standard open ocean algorithms. The paper also demonstrates the improved accuracy of chl-a from high-resolution OLI compared to coarser resolution MODIS for coastal chl-a detection. The researcher’s study was the first to use high-resolution Landsat 8 TIRS and OLI for coastal water quality monitoring of wastewater diversions. The extension of the analysis uses the researcher’s improved accuracy to measure the chl-a concentration in response to the HTP failure of 2021. Limited corroborating measurements limited the analysis to visual interpretation. Spatial-Temporal changes in chl-a concentrations are indicative of the possible effect of the 17 million gallons of untreated wastewater discharged into SMB. Further studies can apply these findings to a more in-depth analysis of the damage to the coastal water quality of the SMB and its effect on its marine ecosystems.\n\n\nReferences\nTimmerman, R. (2021, April 9th). California HAB Bulletin: March 2021 | Southern California Coastal Ocean Observing System. Sccoos.org. https://sccoos.org/california-hab-bulletin/march-2021/\nTrinh, R. C., Fichot, C. G., Gierach, M. M., Holt, B., Malakar, N. K., Hulley, G., & Smith, J. (2017). Application of Landsat 8 for Monitoring Impacts of Wastewater Discharge on Coastal Water Quality. Frontiers in Marine Science, 4. https://doi.org/10.3389/fmars.2017.00329\n(2022). Hyperion 2021 Recovery (lacitysan.org)"
  },
  {
    "objectID": "posts/map_gallery/index.html",
    "href": "posts/map_gallery/index.html",
    "title": "Map Gallery",
    "section": "",
    "text": "A geologic map over Aster satellite imagery made with provided field notes, satellite imagery and some spectral data from the satellite-based ASTER instrument to figure out the distribution of rock units.\n\n\n\n\n\n\n\nJohn Snow\nRecreation of the pivotal John Snow map of cholera outbreak.\n\n\n\n\n\n\n\nCreated for Cartographic Design and Geovisualization course.\n\n\n\n\n\n\n\nGeocoding and Digitizing\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChloropleth, Kriging, and IDW mapping"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "University of California, Santa Barbara, Department of Geography - Undergrad Remote Sensing Group Poster Presentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupplement to ‘Analyzing Greenness through NDVI in Redlined areas in Philadelphia, Pennsylvania’\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWriting Sample\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOcean remote sensing project extending analysis of Santa Monica Bay Chlorophyll-a from Trinh et al. 2017 covering catastrophic failure of Hyperion Treatment Plant in 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollection of maps from undergrad.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Guillermo Romero",
    "section": "",
    "text": "I am currently pursuing a Master’s of Environmental Data Science at the Bren School of Environmental Science & Management. I graduated from the University of California, Santa Barbara in 2022 with an Earth Science B.S. with a concentration in geohydrology and a Geography B.A. with a concentration in G.I.S.\nData science is at the forefront of addressing today's water crises. My goal is to focus on the problem of clean water in conjunction with remote sensing. Improving water use efficiency, reduction of wasteful water use, real-time water quality monitoring, forecasting water quality, and assessing community water sources are all problems with data science at their core. The skills I have gained from the Bren School will allow me to engage with these problems as a data scientist. The opportunities for data science to improve the water and lives of those around me speaks directly to what I seek to accomplish professionally."
  },
  {
    "objectID": "SentinelNBR.html",
    "href": "SentinelNBR.html",
    "title": "Environmental Data Science",
    "section": "",
    "text": "In this Jupyter Notebook, we first visualize true color images of the August Complex fire before and after it burned. Bands from the Sentinel 2 satellites as well as a dataset from USFS with wildfire boundaries are used for our analysis. Then, the Normalized Burn Ratio (NBR) is used to analyze burn severity, which is a measure of the degree to which a fire has affected the ecosystem. To compare these two images, we will compute the normalized difference to show where burn severity most significantly affected the vegetation and soil. We then added a scale to the normalized difference to show the levels of burn severity from the August Complex fire. Finally, we visualized the levels of severity to show the overall intensity. This link provides more information on the Sentinel 2 dataset that was used: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2.\n\n\n\nGuillermo Romero, Bren School of Environmental Science & Management, UCSB (romero61@ucsb.edu)\nWade Sedgewick, Bren School of Environmental Science & Management, UCSB (wsedgwick@ucsb.edu)\nHailey Veirs, Bren School of Environmental Science & Management, UCSB (hveirs@ucsb.edu)\n\n\n\n\n\nPurpose\nDataset Description\nData I/O\nMetadata Display\nTrue Color Visualization\nUse Case Examples\nUse Case Discussion\nReferences\n\n # Notebook Purpose Wildfires in California are becoming increasingly straining on the environment as well as the millions of people living in the state. As the world struggles to deal with climate change and droughts in the West, California must be proactive at addressing this threat. This notebook aims at visualizing the severity of the August Complex fire, the largest wildfire by area in California’s history. This fire began on August 16th and wasn’t contained until November 12th. California’s 7 biggest wildfires have all occurred in the past 5 years as California becomes a more draught-prone state, which means that this problem will only get worse. The wildfire started from multiple lightning strikes that resulted in 13 separate fires, and over the following week, they quickly joined to form the August Fire, which lasted just under three months.\nTo visualize the severity of the August Complex fire, we will do an analysis of the difference Normalized Burn Ratio (dNBR). Sentinel 2, the satellites used for Europe’s Earth observation program, will be used to conduct this analysis. The dNBR is an analysis on quantifying the damage that the fire had on the ecosystem. The NBR before and after the fires is first calculated. We use these images to calculate the dNBR, which shows the difference in burn severity. With Sentinel’s Visible and Near Infrared (VNIR) and Shortwave Infrared (SWIR) bands at 20 meter resolution, we are able to visualize the severity of the largest wildlife in California. Lastly, we display the proportion of level of severity, showing how detrimental it was to the environment.\n # Dataset Description Sentinel 2\nThe dataset we will be using is the Sentinel 2 which was collected and distributed by Copernicus, Europe’s Earth observation program. Sentinel 2 uses two separate satellites for increased temporal resolution. These satellites focus on terrestrial monitoring, whereas Sentinel 1 aims at capturing imagery of both marine and terrestrial areas. The Sentinel 2 satellites focus on monitoring coasts, vegetation and soil.\nResolution\nThe Sentinel 2 satellites collect 13 separate bands. Sentinel 2A was launched June, 2015 and Sentinel 2B was launched March, 2017. Because the Sentinel 2 program comprises of two satellites that rotate the earth every 10 days, an entire cycle is completed in only five days. This increased temporal resolution is more than three times higher than Landsat 8. This is due to the focus on land and near-shore monitoring. The Sentinel satellites collect 13 separate bands: the visible bands have a resolution of 10 meters, five 20 meter and one 10 meter Visible and Near Infrared bands, two 60 meter and two 20-meter Shortwave Infrared bands, and one 60 meter Ultra Blue band (for coastal sediment and aerosols). We will be using a 20-meter NIR band as well as a 20-meter SWIR band for our dNBR analysis.\nFile Format & Data Retrieval\nThe data format for Sentinel 2 are ImageCollections, which are a collection of all images as individual bands taken by Sentinel 2A and 2B over their lifetimes. For our analysis, we used Google Earth Engine.\nLimitations\nThe Sentinel 2 satellites have been in orbit for five and seven years, providing highly temporal and decently spatial resolution. However, there are some limitations in using the data. The most prominent is cloud coverage, which affects how much of the earth a satellite can record. Although trends can show where cloud coverage might be more difficult to work around, the randomness and frequency of clouds interfering with imagery collection can mean that researchers do not have access to satellite imagery at a certain date. Additionally, although 10 meters is an improvement to the 30-meter Landsat visible bands, this is still not at a resolution for spatially detailed analysis such as individual tree identification.\nMTBS Polygon Data\nWe will also use the US Forest Service’s Monitoring Trends in Burned Severity (MTBS) shapefiles with the Sentinel data. The data is made of shapefiles with several other saved variables such as the acerage of burned area, latitude longitude, ignition date, and dNBR values over certain thresholds. These shapefiles are delineated from Landsat imagery and burn severity index data at a map scale of 1:24,000 to 1:50,000. Additionally, all vector data is in Albers Equal Area projection.\nFor this notebook, we will be using the polygon geometry to help subset our Sentinel data to the burned area. Although the MTBS vector data includes high to low burn severity threshold data, it only includes the value that each threshold was determined as, not the area values that correspond to each threshold. Luckily, we can still use the vector data in our case example.\n # Data Input/Output\nFirst, import the packages we need.\n\n#1) Import all necessary packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport datetime\nimport ee\nimport geemap\n\n\nee.Authenticate()\n\nTo authorize access needed by Earth Engine, open the following\n        URL in a web browser and follow the instructions:\n        https://code.earthengine.google.com/client-auth?scopes=https%3A//www.googleapis.com/auth/earthengine%20https%3A//www.googleapis.com/auth/devstorage.full_control&request_id=tRS7cOFmREvgSPZBVKFc42kVbJOP7B7p9XQsYHNHSDg&tc=7yCyfFYDl7KkcNpyxhcCM-Pa-izZgXhbU3tr6XAgO-A&cc=rr4qgJXURf0fi8WQNidONHbiKZa79g4bveRWF5v4TXI\n        The authorization workflow will generate a code, which you should paste in the box below.\n        \n\n\n\nSuccessfully saved authorization token.\n\n\n\n#ee.Initialize()\n\n\n# Loading Sentinel-2 MSI: MultiSpectral Instrument, Level-1C\nimagery = ee.ImageCollection('COPERNICUS/S2')\n#Loading Monitoring Trends in Burn Severity (MTBS) Feature Collection Dataset\nMTBS = ee.FeatureCollection(\"USFS/GTAC/MTBS/burned_area_boundaries/v1\")\n\n\nMap = geemap.Map(center=[39.9, -109], zoom=6.49)\nMap\n\n\n\n\n\nMap.addLayer(MTBS, {}, 'Boundaries')\n\n # Metadata Display\n\n# Show the metadata of the Sentinel raster data.\ntestimg = imagery.first()\ntestimg.getInfo()\n\n{'type': 'Image',\n 'bands': [{'id': 'B1',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [1830, 1830],\n   'crs': 'EPSG:32631',\n   'crs_transform': [60, 0, 300000, 0, -60, 3100020]},\n  {'id': 'B2',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [10980, 10980],\n   'crs': 'EPSG:32631',\n   'crs_transform': [10, 0, 300000, 0, -10, 3100020]},\n  {'id': 'B3',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [10980, 10980],\n   'crs': 'EPSG:32631',\n   'crs_transform': [10, 0, 300000, 0, -10, 3100020]},\n  {'id': 'B4',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [10980, 10980],\n   'crs': 'EPSG:32631',\n   'crs_transform': [10, 0, 300000, 0, -10, 3100020]},\n  {'id': 'B5',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [5490, 5490],\n   'crs': 'EPSG:32631',\n   'crs_transform': [20, 0, 300000, 0, -20, 3100020]},\n  {'id': 'B6',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [5490, 5490],\n   'crs': 'EPSG:32631',\n   'crs_transform': [20, 0, 300000, 0, -20, 3100020]},\n  {'id': 'B7',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [5490, 5490],\n   'crs': 'EPSG:32631',\n   'crs_transform': [20, 0, 300000, 0, -20, 3100020]},\n  {'id': 'B8',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [10980, 10980],\n   'crs': 'EPSG:32631',\n   'crs_transform': [10, 0, 300000, 0, -10, 3100020]},\n  {'id': 'B8A',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [5490, 5490],\n   'crs': 'EPSG:32631',\n   'crs_transform': [20, 0, 300000, 0, -20, 3100020]},\n  {'id': 'B9',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [1830, 1830],\n   'crs': 'EPSG:32631',\n   'crs_transform': [60, 0, 300000, 0, -60, 3100020]},\n  {'id': 'B10',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [1830, 1830],\n   'crs': 'EPSG:32631',\n   'crs_transform': [60, 0, 300000, 0, -60, 3100020]},\n  {'id': 'B11',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [5490, 5490],\n   'crs': 'EPSG:32631',\n   'crs_transform': [20, 0, 300000, 0, -20, 3100020]},\n  {'id': 'B12',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [5490, 5490],\n   'crs': 'EPSG:32631',\n   'crs_transform': [20, 0, 300000, 0, -20, 3100020]},\n  {'id': 'QA10',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [10980, 10980],\n   'crs': 'EPSG:32631',\n   'crs_transform': [10, 0, 300000, 0, -10, 3100020]},\n  {'id': 'QA20',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 4294967295},\n   'dimensions': [5490, 5490],\n   'crs': 'EPSG:32631',\n   'crs_transform': [20, 0, 300000, 0, -20, 3100020]},\n  {'id': 'QA60',\n   'data_type': {'type': 'PixelType',\n    'precision': 'int',\n    'min': 0,\n    'max': 65535},\n   'dimensions': [1830, 1830],\n   'crs': 'EPSG:32631',\n   'crs_transform': [60, 0, 300000, 0, -60, 3100020]}],\n 'id': 'COPERNICUS/S2/20150627T102531_20160606T223605_T31RCL',\n 'version': 1617875178877821,\n 'properties': {'DATATAKE_IDENTIFIER': 'GS2A_20150627T102537_000062_N02.02',\n  'SPACECRAFT_NAME': 'Sentinel-2A',\n  'FORMAT_CORRECTNESS_FLAG': 'PASSED',\n  'IERS_BULLETIN_FILENAME': 'S2__OPER_AUX_UT1UTC_PDMC_20150625T000000_V20150626T000000_20160625T000000',\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B8A': 103.625932116468,\n  'MEAN_SOLAR_AZIMUTH_ANGLE': 98.2934185023958,\n  'system:footprint': {'type': 'LinearRing',\n   'coordinates': [[2.0823420055272694, 28.022371475142155],\n    [2.082262387713162, 28.022460994622374],\n    [1.7870267921380452, 28.020172100522007],\n    [1.7863863638768989, 28.019300827799174],\n    [1.7840385788154567, 28.010599213518702],\n    [1.7583696085580722, 27.9074708061136],\n    [1.7138484027983951, 27.72807167221268],\n    [1.711234871844144, 27.71720577206124],\n    [1.7112611391967587, 27.714974277442444],\n    [1.7119348947961275, 27.714682202980047],\n    [1.7139838289586986, 27.71406533734163],\n    [1.7676420145675962, 27.705345166014425],\n    [1.9106692751128727, 27.682352691622302],\n    [1.9653060360042989, 27.67356410080027],\n    [1.970992862852016, 27.67270366436133],\n    [1.9756637522563858, 27.672015966240707],\n    [2.0845963559712533, 27.656438224472712],\n    [2.0853071966042025, 27.65644288605324],\n    [2.085405603161776, 27.657703616668854],\n    [2.0823420055272694, 28.022371475142155]]},\n  'SOLAR_IRRADIANCE_B12': 85.25,\n  'SOLAR_IRRADIANCE_B10': 367.15,\n  'SENSOR_QUALITY': 'PASSED',\n  'SOLAR_IRRADIANCE_B11': 245.59,\n  'GENERATION_TIME': 1465314766000,\n  'SOLAR_IRRADIANCE_B8A': 955.19,\n  'FORMAT_CORRECTNESS': 'PASSED',\n  'PRODUCT_URI': '754_2016-06-07T01_11',\n  'SENSOR_QUALITY_FLAG': 'PASSED',\n  'CLOUD_COVERAGE_ASSESSMENT': 0.010707692307692307,\n  'system:time_end': 1435400731456,\n  'system:time_start': 1435400731456,\n  'DATASTRIP_ID': 'S2A_OPER_MSI_L1C_DS_EPA__20160606T223605_S20150627T102531_N02.02',\n  'PROCESSING_BASELINE': '02.02',\n  'SENSING_ORBIT_NUMBER': 62,\n  'GEOMETRIC_QUALITY_FLAG': 'PASSED',\n  'SENSING_ORBIT_DIRECTION': 'DESCENDING',\n  'GENERAL_QUALITY': 'PASSED',\n  'GRANULE_ID': 'S2A_OPER_MSI_L1C_TL_EPA__20160606T223605_A000062_T31RCL_N02.02',\n  'REFLECTANCE_CONVERSION_CORRECTION': 0.967962284766511,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B8': 101.587249585053,\n  'DATATAKE_TYPE': 'INS-NOBS',\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B9': 104.268281291389,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B6': 103.023729563746,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B7': 103.330261145428,\n  'RADIOMETRIC_QUALITY_FLAG': 'PASSED',\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B4': 102.416933650149,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B1': 10.4493442111546,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B5': 102.725991378684,\n  'RADIOMETRIC_QUALITY': 'PASSED',\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B2': 101.277174913552,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B3': 101.897620500158,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B5': 10.3766701595358,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B1': 103.965471634376,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B4': 10.3633646486197,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B3': 10.3676352976004,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B2': 10.3540810070976,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B9': 10.4726949936646,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B8': 10.3598860673037,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B7': 10.409047299956,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B6': 10.3918880450569,\n  'MEAN_SOLAR_ZENITH_ANGLE': 18.8695856990462,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B8A': 10.4280169663968,\n  'GRI_FILENAME': 'S2A_OPER_AUX_GRI065_PDMC_20130621T120000_S20130101T000000',\n  'MGRS_TILE': '31RCL',\n  'PRODUCTION_DEM_TYPE': 'S2__OPER_DEM_GLOBEF_PDMC_19800101T000000_S19800101T000000',\n  'CLOUDY_PIXEL_PERCENTAGE': 0,\n  'GENERAL_QUALITY_FLAG': 'PASSED',\n  'PRODUCT_ID': 'S2A_OPER_PRD_MSIL1C_PDMC_20160607T155246_R062_V20150627T102531_20150627T102531',\n  'ECMWF_DATA_REF': 'S2__OPER_AUX_ECMWFD_FAKE_19800101T000000_V19800101T000000_19800101T000000',\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B10': 10.342072708265,\n  'SOLAR_IRRADIANCE_B9': 813.04,\n  'DEGRADED_MSI_DATA_PERCENTAGE': 0,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B11': 10.3781208976365,\n  'MEAN_INCIDENCE_ZENITH_ANGLE_B12': 10.3980344773923,\n  'SOLAR_IRRADIANCE_B6': 1288.32,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B10': 102.245777794173,\n  'SOLAR_IRRADIANCE_B5': 1425.56,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B11': 103.091486838831,\n  'SOLAR_IRRADIANCE_B8': 1036.39,\n  'MEAN_INCIDENCE_AZIMUTH_ANGLE_B12': 103.753229567026,\n  'SOLAR_IRRADIANCE_B7': 1163.19,\n  'SOLAR_IRRADIANCE_B2': 1941.63,\n  'SOLAR_IRRADIANCE_B1': 1913.57,\n  'SOLAR_IRRADIANCE_B4': 1512.79,\n  'GEOMETRIC_QUALITY': 'PASSED',\n  'SOLAR_IRRADIANCE_B3': 1822.61,\n  'system:asset_size': 129008712,\n  'system:index': '20150627T102531_20160606T223605_T31RCL'}}\n\n\n\n# Show the metadata of the MTBS vector data.\nshape = MTBS.first()\nshape.getInfo()\n#MTBS.limit(1).getInfo()\n\n{'type': 'Feature',\n 'geometry': {'type': 'Polygon',\n  'coordinates': [[[-119.38591594185316, 46.608000178959415],\n    [-119.3857197620494, 46.60746062836953],\n    [-119.3849973934919, 46.605788467058886],\n    [-119.38431506435111, 46.605048233122034],\n    [-119.38384242842645, 46.604392769257],\n    [-119.38369087131915, 46.60380859251704],\n    [-119.38399415384015, 46.60285438814439],\n    [-119.38399413844814, 46.6021810439697],\n    [-119.3839895860506, 46.601057339239944],\n    [-119.3832271305769, 46.60008526935568],\n    [-119.38271437763693, 46.599153306998126],\n    [-119.38205884427447, 46.59848887297507],\n    [-119.3805606385806, 46.59678553596452],\n    [-119.37976688884524, 46.596228171149846],\n    [-119.37893749395022, 46.5956038943552],\n    [-119.37879925913909, 46.59549682467806],\n    [-119.37835331516303, 46.59508658178018],\n    [-119.37749266785251, 46.59449800574961],\n    [-119.37556188696519, 46.59307555318247],\n    [-119.37477267263473, 46.59251815871897],\n    [-119.37393883827733, 46.59200984525301],\n    [-119.37384078158495, 46.591884988930275],\n    [-119.37349740776183, 46.5913454214767],\n    [-119.37323875341802, 46.59094409770453],\n    [-119.37285528210687, 46.58982932079307],\n    [-119.37224879936895, 46.58911142290122],\n    [-119.37222204940403, 46.58908023703595],\n    [-119.3709245055636, 46.58814381533935],\n    [-119.37022882563342, 46.58769790334574],\n    [-119.37014850872252, 46.587559645408675],\n    [-119.36959557662966, 46.5870022547947],\n    [-119.36935925153225, 46.58669458072818],\n    [-119.36891342324583, 46.58642256502872],\n    [-119.3680037831308, 46.58581614781061],\n    [-119.36774953978495, 46.585646712229156],\n    [-119.36697818625035, 46.58531224146614],\n    [-119.36593026388145, 46.58485739997053],\n    [-119.36493586653927, 46.58444717347363],\n    [-119.3647664575791, 46.5844070911167],\n    [-119.36434284915289, 46.58430899605048],\n    [-119.36326811500128, 46.584175183628425],\n    [-119.36192606100921, 46.58371592150408],\n    [-119.36090938983082, 46.58319866492033],\n    [-119.35979006867315, 46.58253426995572],\n    [-119.35880464827426, 46.5819278063165],\n    [-119.35845681526236, 46.58177623154404],\n    [-119.3580554858754, 46.58148635403894],\n    [-119.3578013174883, 46.5813615383932],\n    [-119.3572929819876, 46.58100474112867],\n    [-119.35576354664117, 46.57988110311539],\n    [-119.3550277722055, 46.579497634166124],\n    [-119.35456848188599, 46.57926128877154],\n    [-119.3533645455567, 46.57863698542569],\n    [-119.3532263146605, 46.57856566909792],\n    [-119.35116173168899, 46.57806621130077],\n    [-119.34987299784693, 46.577433044023515],\n    [-119.34869133044563, 46.576777528782365],\n    [-119.34758997740416, 46.5759749089402],\n    [-119.34557003466402, 46.57449890674595],\n    [-119.341552359386, 46.57266624245867],\n    [-119.33980884362911, 46.57178339394056],\n    [-119.33745446094528, 46.570793421095104],\n    [-119.33427510096317, 46.569370966529405],\n    [-119.33327626416042, 46.568996414305616],\n    [-119.33184047394687, 46.56863073910287],\n    [-119.33052053328174, 46.56815368049734],\n    [-119.32933885913086, 46.567538258630734],\n    [-119.32735008731657, 46.56674900414835],\n    [-119.32600340650993, 46.566356620458386],\n    [-119.32490204944396, 46.56588395428006],\n    [-119.32426890024205, 46.565643189934825],\n    [-119.32400574751935, 46.565545053125824],\n    [-119.32293565387214, 46.565237396898624],\n    [-119.32208839561146, 46.56504118595398],\n    [-119.31964031424715, 46.56460420268134],\n    [-119.3179235846621, 46.564733507578275],\n    [-119.31712536811347, 46.56484498511331],\n    [-119.31645204844216, 46.56494310121235],\n    [-119.314935936279, 46.56520616296069],\n    [-119.31422252806023, 46.565892892386096],\n    [-119.31251022708744, 46.566209463763826],\n    [-119.31193502357391, 46.565558407906984],\n    [-119.31129734364353, 46.565259730940674],\n    [-119.30990164499649, 46.565415792931674],\n    [-119.30800652870538, 46.56566102027716],\n    [-119.30726189217398, 46.56574576333338],\n    [-119.30713700812544, 46.56578589644063],\n    [-119.3067312131748, 46.566334352034],\n    [-119.30612034482293, 46.566548382211806],\n    [-119.30598651727965, 46.56683819130227],\n    [-119.30568784909138, 46.567052253460986],\n    [-119.30568780229639, 46.56731091199411],\n    [-119.3059151681077, 46.56785041370343],\n    [-119.3061694296881, 46.56838551412443],\n    [-119.30653508658932, 46.568537123055975],\n    [-119.30687843705827, 46.56837214629961],\n    [-119.30729315825286, 46.56782814997063],\n    [-119.30768097885834, 46.567756767744555],\n    [-119.30840790050163, 46.56831865360366],\n    [-119.30920161069837, 46.56914800676582],\n    [-119.30947801132011, 46.56957607123608],\n    [-119.30989728152142, 46.56968312627625],\n    [-119.31099858675576, 46.569491343409474],\n    [-119.3122115478721, 46.56925059815762],\n    [-119.31308104855104, 46.569299634103935],\n    [-119.31362504775937, 46.56968309526681],\n    [-119.31373646983909, 46.570048776209084],\n    [-119.31377212308725, 46.570053223864186],\n    [-119.31502512631232, 46.57061062594059],\n    [-119.31565390608318, 46.57123045549944],\n    [-119.31585454556223, 46.57141772625755],\n    [-119.31823132997562, 46.5711947631582],\n    [-119.31914093054259, 46.57134637807114],\n    [-119.31939061688068, 46.571698667739305],\n    [-119.31956010377162, 46.572175753774225],\n    [-119.3191409398755, 46.572358597168545],\n    [-119.31705407908282, 46.57265290382176],\n    [-119.31696485451887, 46.57315229873113],\n    [-119.31717001561992, 46.57366505305987],\n    [-119.31758908681367, 46.573776570969585],\n    [-119.31797261257306, 46.57387911670274],\n    [-119.32104050443735, 46.5732102971938],\n    [-119.3213214078206, 46.573468871702374],\n    [-119.32127684629384, 46.57395047173989],\n    [-119.32136598348957, 46.5747085050625],\n    [-119.32235152539091, 46.575462106510564],\n    [-119.32280178775011, 46.5756003385717],\n    [-119.32323886665185, 46.57612649598336],\n    [-119.32394783553379, 46.57662592681652],\n    [-119.32491102500438, 46.57663042382325],\n    [-119.32555763139041, 46.57705401331132],\n    [-119.3263378907006, 46.577758563842906],\n    [-119.32702906495837, 46.57821781506412],\n    [-119.32771570573219, 46.57874399031018],\n    [-119.32841140651333, 46.57888223995216],\n    [-119.32957072573134, 46.57874846944731],\n    [-119.3304491576507, 46.57870832393351],\n    [-119.33126965402707, 46.579073991458706],\n    [-119.33176015766345, 46.57930140746585],\n    [-119.33246475476015, 46.57956892684406],\n    [-119.33277684609746, 46.5799211960459],\n    [-119.33363301356172, 46.58032702150878],\n    [-119.33417252325022, 46.58041620527414],\n    [-119.3343420169378, 46.58043848074802],\n    [-119.33567522305482, 46.58047858558001],\n    [-119.33607661789578, 46.58080411894427],\n    [-119.33650917880567, 46.581205427759414],\n    [-119.33704421388884, 46.58178956585096],\n    [-119.33757930877418, 46.582150796472185],\n    [-119.33823037122704, 46.5824851882983],\n    [-119.33832392281617, 46.58286420658352],\n    [-119.33803858174845, 46.58297124210416],\n    [-119.33746778895963, 46.58306935491593],\n    [-119.33658492792674, 46.5832254054667],\n    [-119.33645116295602, 46.583252181053155],\n    [-119.33644219087701, 46.583782778766285],\n    [-119.33641992346725, 46.58405479456311],\n    [-119.33647344732489, 46.58412165095005],\n    [-119.33697729910433, 46.58500010406042],\n    [-119.33723146683975, 46.58552632475129],\n    [-119.33786913076858, 46.58591869840308],\n    [-119.33851568025057, 46.58634679124496],\n    [-119.33971078923447, 46.58691307600729],\n    [-119.34116889759878, 46.58751955005446],\n    [-119.34139635495364, 46.58762654771222],\n    [-119.34139627546472, 46.587635480752624],\n    [-119.34362140316426, 46.58924075732783],\n    [-119.345204324603, 46.590302015449225],\n    [-119.34629243970426, 46.590712254533045],\n    [-119.34716634922485, 46.59073004969881],\n    [-119.3487627464288, 46.59103332706009],\n    [-119.350082650517, 46.59185819966169],\n    [-119.35185282855124, 46.59341891623282],\n    [-119.35289629049701, 46.59445785910387],\n    [-119.35440801008254, 46.59544781758929],\n    [-119.3544882530924, 46.59547900559031],\n    [-119.3576898459948, 46.597218070498556],\n    [-119.36073098043575, 46.599122129142025],\n    [-119.36170753846413, 46.59987570473334],\n    [-119.36402183163877, 46.60136504722315],\n    [-119.36699597555531, 46.602653726772694],\n    [-119.37047857009973, 46.60438828977967],\n    [-119.37622185105816, 46.607411564026975],\n    [-119.38078357867376, 46.609658983904794],\n    [-119.38238886077953, 46.609302243779446],\n    [-119.38443109787534, 46.60860212597129],\n    [-119.38563956206269, 46.608316788479044],\n    [-119.38591594185316, 46.608000178959415]]]},\n 'id': '0000000000000000047d',\n 'properties': {'Asmnt_Type': 'Initial',\n  'BurnBndAc': 2036,\n  'BurnBndLat': '46.587',\n  'BurnBndLon': '-119.346',\n  'Comment': '',\n  'Event_ID': 'WA4658611935119840603',\n  'High_T': 9999,\n  'Ig_Date': 455094000000,\n  'IncGreen_T': -150,\n  'Incid_Name': 'UNNAMED',\n  'Incid_Type': 'Unknown',\n  'Low_T': 50,\n  'Map_ID': 10001061,\n  'Map_Prog': 'MTBS',\n  'Mod_T': 400,\n  'NoData_T': -970,\n  'Perim_ID': '',\n  'Post_ID': '504402819840705',\n  'Pre_ID': '404402819830812',\n  'dNBR_offst': 3,\n  'dNBR_stdDv': 0,\n  'irwinID': ''}}\n\n\n\n# Below is an additional way to subset data using a Feature Collection:\n# Needs to be seperated into different code blocks to run\n#counties = ee.FeatureCollection(\"TIGER/2018/Counties\")\n#Map.addLayer(counties, {}, 'US Counties')\n##### DRAW POLYGON TO SELECT COUNTIES! ####\n#Map.draw_features\n#roi = ee.FeatureCollection(Map.draw_features)\n#selected_counties = counties.filterBounds(roi)\n#Map.addLayer(selected_counties, {}, \"Selected Counties\")\n#Map.centerObject(selected_counties, zoom = 8);\n#august_complex = MTBS.filterBounds(roi)\n#Map.addLayer(august_complex, {}, \"August Complex Boundary\")\n#Map.centerObject(august_complex, zoom = 8);\n#Map.remove_last_drawn()\n\n#Map.remove_ee_layer('US Counties')\n#Map.remove_ee_layer('August Complex Boundary')\n#c_polygon = selected_counties.geometry().geometries().filter(ee.Filter.hasType('item','Polygon')); \n#geometry = ee.Geometry.MultiPolygon(c_polygon)                     \n#geometry = ee.FeatureCollection(geometry)  \n#geemap.ee_to_shp(geometry, filename='../downloads/selected_counties.shp')\n\n # True Color Visualization\nStart off by making a true color image of our use case example. This will show how the Sentinel data looks, as well as how we filter it to based on the MTBS shapefile.\n\naug_complex = MTBS.filter(ee.Filter.eq('Incid_Name', 'AUGUST COMPLEX'));\n\n\n#august_complex.getInfo()\naug_complex.getInfo()\n#BurnBndAc  INT  Burn boundary acreage  1068802\n\n{'type': 'FeatureCollection',\n 'columns': {'Asmnt_Type': 'String',\n  'BurnBndAc': 'Long',\n  'BurnBndLat': 'String',\n  'BurnBndLon': 'String',\n  'Comment': 'String',\n  'Event_ID': 'String',\n  'High_T': 'Long',\n  'Ig_Date': 'Long',\n  'IncGreen_T': 'Long',\n  'Incid_Name': 'String',\n  'Incid_Type': 'String',\n  'Low_T': 'Long',\n  'Map_ID': 'Long',\n  'Map_Prog': 'String',\n  'Mod_T': 'Long',\n  'NoData_T': 'Long',\n  'Perim_ID': 'String',\n  'Post_ID': 'String',\n  'Pre_ID': 'String',\n  'dNBR_offst': 'Long',\n  'dNBR_stdDv': 'Long',\n  'irwinID': 'String',\n  'system:index': 'String'},\n 'version': 1662053186524383,\n 'id': 'USFS/GTAC/MTBS/burned_area_boundaries/v1',\n 'properties': {'system:asset_size': 183874238},\n 'features': [{'type': 'Feature',\n   'geometry': {'type': 'Polygon',\n    'coordinates': [[[-123.51767884718052, 40.26900901543728],\n      [-123.51766995463137, 40.26895103059604],\n      [-123.51766101958971, 40.268901991145135],\n      [-123.51764764960616, 40.268848446214186],\n      [-123.51762976002951, 40.268794960054485],\n      [-123.51760750171756, 40.26873701770672],\n      [-123.51758080852913, 40.2686745699191],\n      [-123.51755402902997, 40.26861215045162],\n      [-123.51748271212585, 40.26847390324846],\n      [-123.51743361139279, 40.26838921728042],\n      [-123.5173755985467, 40.26830446564678],\n      [-123.51731765209985, 40.26821976344485],\n      [-123.51725079361981, 40.26813499555284],\n      [-123.5171839370864, 40.268054763729126],\n      [-123.51710808220191, 40.267974494383935],\n      [-123.51703231400307, 40.26789419693384],\n      [-123.51694754918212, 40.26781839781965],\n      [-123.5168628065467, 40.267747057175136],\n      [-123.51677806421894, 40.2676757165882],\n      [-123.51668891094774, 40.26760886485771],\n      [-123.51659536695362, 40.267546424458494],\n      [-123.51650160616128, 40.26748844959048],\n      [-123.51640802002069, 40.267434954120425],\n      [-123.51630993492333, 40.26738143976018],\n      [-123.51621624037762, 40.267336839870595],\n      [-123.51611822118379, 40.26729670044741],\n      [-123.51601563840121, 40.26726102862343],\n      [-123.51590862279656, 40.26722538709288],\n      [-123.51578819621867, 40.26718966056572],\n      [-123.51566333839762, 40.267158500079056],\n      [-123.51552956884674, 40.2671272734064],\n      [-123.51537795689839, 40.267100527743885],\n      [-123.51520402471039, 40.267064840914045],\n      [-123.5137905311146, 40.26546404846071],\n      [-123.51362554579548, 40.2652812100854],\n      [-123.51353186199482, 40.26516970331714],\n      [-123.51345610795025, 40.265076084051245],\n      [-123.5133669024727, 40.2649601387128],\n      [-123.51278278932998, 40.26418873091604],\n      [-123.51269802029337, 40.26407275754727],\n      [-123.5126401324104, 40.263996978038925],\n      [-123.51259100218535, 40.2639167085396],\n      [-123.51252861657731, 40.26382305039277],\n      [-123.51250186841546, 40.26378295552089],\n      [-123.51244839247046, 40.26370268841064],\n      [-123.512390353025, 40.263626888461445],\n      [-123.51235921417131, 40.26359120435591],\n      [-123.51232790142868, 40.26355104134658],\n      [-123.51229667631017, 40.26351538550314],\n      [-123.51226547265559, 40.26348418754503],\n      [-123.51222540271641, 40.26344851463682],\n      [-123.51218970044657, 40.26341729762557],\n      [-123.51215404103002, 40.26339499632617],\n      [-123.51210945037285, 40.26337270611388],\n      [-123.51206485977056, 40.263350415892035],\n      [-123.51201577051332, 40.263328106566206],\n      [-123.51197118002413, 40.26330581632294],\n      [-123.51182408668781, 40.2632433671131],\n      [-123.51177501909014, 40.26322551554414],\n      [-123.51173042887953, 40.26320322523836],\n      [-123.51168138483537, 40.26317650725436],\n      [-123.51164122727633, 40.263154186777136],\n      [-123.51159661589269, 40.26312743862777],\n      [-123.51155650324894, 40.26310070959373],\n      [-123.51147629835788, 40.263047174053575],\n      [-123.5113959859945, 40.26298920892489],\n      [-123.51132017252634, 40.26293126294531],\n      [-123.51128447147214, 40.26290004600368],\n      [-123.51124885685013, 40.26286880086671],\n      [-123.51121315590875, 40.26283758394959],\n      [-123.51114186412465, 40.26276625566563],\n      [-123.51096792687733, 40.26259238062731],\n      [-123.51093222640414, 40.26256116383333],\n      [-123.51089659108945, 40.262525461102044],\n      [-123.5108608907326, 40.26249424433648],\n      [-123.51082075798584, 40.26246305769241],\n      [-123.51078064553147, 40.26243179358301],\n      [-123.51070040161375, 40.26237387805912],\n      [-123.51053539125658, 40.26226235886162],\n      [-123.51045064950554, 40.26220442420277],\n      [-123.51041494979951, 40.262173207529536],\n      [-123.51037490412023, 40.26214199274808],\n      [-123.51034363693122, 40.262110746013676],\n      [-123.51027230405977, 40.26204836201952],\n      [-123.51013852397526, 40.26192345656011],\n      [-123.51006719176412, 40.26186107272024],\n      [-123.51003149267056, 40.26182985618535],\n      [-123.50999136127233, 40.261798669727874],\n      [-123.50995127134712, 40.26177186345483],\n      [-123.50991114007377, 40.26174067700993],\n      [-123.509821923074, 40.26168718099903],\n      [-123.50968818442686, 40.26160690875165],\n      [-123.50959896806552, 40.26155341270612],\n      [-123.5095544463541, 40.26152663647337],\n      [-123.50951424951764, 40.2614954007878],\n      [-123.5094741188895, 40.26146421437691],\n      [-123.50943842063782, 40.26143299793846],\n      [-123.50940278769096, 40.26139729570558],\n      [-123.50937156688099, 40.261361640932115],\n      [-123.50934034612553, 40.26132598618279],\n      [-123.50930912542461, 40.2612903314576],\n      [-123.50927792500809, 40.26125459928595],\n      [-123.50925120284552, 40.2612189638498],\n      [-123.50922439347816, 40.26117882159984],\n      [-123.50919760526705, 40.261143136956385],\n      [-123.50917538078758, 40.26110298581568],\n      [-123.50915756838788, 40.26106288216421],\n      [-123.50914863967921, 40.261045034499745],\n      [-123.5091352595892, 40.261004900888985],\n      [-123.50912185842436, 40.26096030977442],\n      [-123.5091129767776, 40.26092019550367],\n      [-123.50909512628945, 40.26083546029877],\n      [-123.50908175314419, 40.2607462870233],\n      [-123.50907274699186, 40.26066156966849],\n      [-123.50906827656381, 40.260616968213554],\n      [-123.50906385517519, 40.260532242215966],\n      [-123.50906834808767, 40.2604118668832],\n      [-123.50907722543838, 40.26016215329759],\n      [-123.50908618503301, 40.25994812902087],\n      [-123.50909952765112, 40.25977419972079],\n      [-123.50911290843182, 40.259644901459225],\n      [-123.50912182831014, 40.25955567965819],\n      [-123.50913522615527, 40.2594665547984],\n      [-123.50916196909117, 40.25933721688106],\n      [-123.5092021680686, 40.25916330754867],\n      [-123.50923784548696, 40.259002779914844],\n      [-123.50931354509336, 40.25868172499442],\n      [-123.50935376385152, 40.25851227608975],\n      [-123.50938941890254, 40.25834729416885],\n      [-123.50940279183028, 40.25826703749279],\n      [-123.50941174937172, 40.2582224475403],\n      [-123.50941614355509, 40.25818232380445],\n      [-123.50942060294899, 40.258137714723865],\n      [-123.50942511088425, 40.2580529839369],\n      [-123.50942953867172, 40.25791924561329],\n      [-123.50942957584633, 40.25778991750676],\n      [-123.50942956447074, 40.25770071119107],\n      [-123.50942952663152, 40.257660618077736],\n      [-123.50942505594915, 40.25761602045136],\n      [-123.50942060642227, 40.25757587999801],\n      [-123.50941613575277, 40.25753128247845],\n      [-123.50940275628932, 40.25749115290998],\n      [-123.50938492288385, 40.257442061745],\n      [-123.50936713272279, 40.2574064193909],\n      [-123.50934034832963, 40.25735288202851],\n      [-123.50931356491431, 40.257303879282766],\n      [-123.5092823699087, 40.25725482915247],\n      [-123.50922438901007, 40.25717009844188],\n      [-123.50912634907215, 40.257031843519435],\n      [-123.50908614018451, 40.256964976284465],\n      [-123.50900150783082, 40.25682227349081],\n      [-123.50893907711833, 40.256715260366526],\n      [-123.50891678967959, 40.256679599385784],\n      [-123.50888103435598, 40.2566171597145],\n      [-123.50886769785214, 40.25658594507959],\n      [-123.50883644060747, 40.25652352481919],\n      [-123.5088097466465, 40.256456638749135],\n      [-123.50877406181236, 40.256358536556945],\n      [-123.50874728167993, 40.25629167897842],\n      [-123.50872059001638, 40.256206937335385],\n      [-123.50868036756731, 40.256082046739515],\n      [-123.50864470933823, 40.255957225102435],\n      [-123.50855106800722, 40.255622763571694],\n      [-123.50851091265845, 40.255497924217345],\n      [-123.50848415659021, 40.25541766944514],\n      [-123.50846636715032, 40.25537749463847],\n      [-123.50844853645377, 40.2553329404964],\n      [-123.50843066071927, 40.25529279397677],\n      [-123.50839063019146, 40.25521255209039],\n      [-123.5083236633986, 40.25509661046645],\n      [-123.50825233066246, 40.254976214140164],\n      [-123.50820323994473, 40.25490041926029],\n      [-123.5081542357633, 40.2548245963157],\n      [-123.50807401669951, 40.25471312492182],\n      [-123.50799364557281, 40.25460163274039],\n      [-123.50790895067887, 40.25449459930435],\n      [-123.50781978266683, 40.25437868261175],\n      [-123.50772615946902, 40.25427166027658],\n      [-123.50765923312902, 40.254200344480324],\n      [-123.50762360757774, 40.25416464875301],\n      [-123.50758789573092, 40.25412898124307],\n      [-123.507552204923, 40.25409777043261],\n      [-123.5075121690157, 40.25406656135759],\n      [-123.50747198068409, 40.25403533122959],\n      [-123.50743185854684, 40.254004150367585],\n      [-123.50734709261826, 40.253950633384264],\n      [-123.50725796085072, 40.25389266145249],\n      [-123.507213362361, 40.25386591790983],\n      [-123.5071642663219, 40.253839155007356],\n      [-123.50711968889594, 40.25381686809942],\n      [-123.5070706793492, 40.25379007698355],\n      [-123.50702160443811, 40.25376777069319],\n      [-123.5069770481058, 40.25374994039058],\n      [-123.50692356275431, 40.25373212059355],\n      [-123.50687442256728, 40.25371429908142],\n      [-123.506771883605, 40.25367862948861],\n      [-123.50666938663406, 40.25365187305508],\n      [-123.50661585636048, 40.25363846047815],\n      [-123.50656230590353, 40.253625125325875],\n      [-123.50650879659352, 40.253616169311506],\n      [-123.50645535344701, 40.25360726252395],\n      [-123.50639732640667, 40.25359836450386],\n      [-123.50634377255426, 40.25359834982293],\n      [-123.50629035035341, 40.25359389955425],\n      [-123.50623236509395, 40.25359391466004],\n      [-123.50617881128908, 40.25359389987685],\n      [-123.50612091241837, 40.253593886713055],\n      [-123.50606737946653, 40.253598328478965],\n      [-123.50600939426239, 40.25359834343531],\n      [-123.50595586132185, 40.25360278513298],\n      [-123.50590239451081, 40.253607276056655],\n      [-123.50584888237711, 40.25361617431033],\n      [-123.50579093880073, 40.25362510236398],\n      [-123.50573736108187, 40.25363848537209],\n      [-123.50567943826687, 40.253651869983074],\n      [-123.50562588128636, 40.25366970956128],\n      [-123.5055188328231, 40.253700903820345],\n      [-123.50530045663714, 40.25376334290149],\n      [-123.50519340786673, 40.25379453684767],\n      [-123.50508640439871, 40.25382132330193],\n      [-123.50503732347488, 40.25383019131903],\n      [-123.50498381158054, 40.25384362320495],\n      [-123.5049347306338, 40.25385249117013],\n      [-123.50488128436417, 40.25386143815399],\n      [-123.50483218316654, 40.25387038351941],\n      [-123.50478321329793, 40.253870359160615],\n      [-123.50473415708174, 40.2538703629677],\n      [-123.50468508019715, 40.25386591009185],\n      [-123.50464041409374, 40.253856970762634],\n      [-123.50460035671838, 40.253839158664334],\n      [-123.50455573570355, 40.25382127780416],\n      [-123.50451563708629, 40.25379455239045],\n      [-123.50447549305896, 40.253772234361016],\n      [-123.50443539455057, 40.253745508946],\n      [-123.50439520932294, 40.253714277635844],\n      [-123.50435954234273, 40.25368752246907],\n      [-123.50432385476822, 40.25365631067817],\n      [-123.50429266477828, 40.25362511840571],\n      [-123.50426138807462, 40.25358942026856],\n      [-123.50423467506958, 40.25355379092457],\n      [-123.5042123273768, 40.25351808259905],\n      [-123.50419004584597, 40.2534824235631],\n      [-123.50416783008214, 40.25344227976207],\n      [-123.50414995937925, 40.2534021344476],\n      [-123.5041365862062, 40.25336200868941],\n      [-123.50411871556383, 40.25332186345929],\n      [-123.50410534244229, 40.25328173778717],\n      [-123.50409646682802, 40.25324163167524],\n      [-123.50408752510467, 40.25320147634867],\n      [-123.50408757834653, 40.25316136010174],\n      [-123.50408747910471, 40.25312122283383],\n      [-123.50409196368534, 40.253081076936624],\n      [-123.50410094571842, 40.253040950601964],\n      [-123.50413656870346, 40.252880403581656],\n      [-123.50414546428661, 40.252840305665025],\n      [-123.50414994876925, 40.252800160087105],\n      [-123.50415000192976, 40.25276004429933],\n      [-123.50414549193113, 40.25272439374561],\n      [-123.50413657086796, 40.25268869552064],\n      [-123.5041232391468, 40.25265748357577],\n      [-123.5041008919782, 40.25262177612436],\n      [-123.50407863159454, 40.25259057445517],\n      [-123.50405185321053, 40.252554896798024],\n      [-123.50402507487249, 40.25251921916818],\n      [-123.50399388591673, 40.25248802778228],\n      [-123.50393142141795, 40.25242113932634],\n      [-123.50386895712545, 40.25235425094977],\n      [-123.50383335739187, 40.25232301192799],\n      [-123.50379767135861, 40.25229180110996],\n      [-123.50372632005131, 40.25223383595979],\n      [-123.5036193037767, 40.25214911651755],\n      [-123.50347217120121, 40.2520332161215],\n      [-123.50339634407057, 40.2519796879799],\n      [-123.50327601474335, 40.25188606755448],\n      [-123.50315105674127, 40.251796862963225],\n      [-123.50306643398442, 40.251738909682885],\n      [-123.50302184113464, 40.251712165546486],\n      [-123.50297718222878, 40.25168537214858],\n      [-123.50293258950674, 40.251658628005266],\n      [-123.50288801735522, 40.25163634023336],\n      [-123.50283894797201, 40.251614032868346],\n      [-123.5027899652666, 40.25159623111691],\n      [-123.50274091649327, 40.25157838008805],\n      [-123.50268737049387, 40.2515605094483],\n      [-123.5025847761798, 40.25152932150128],\n      [-123.50247777115113, 40.25149808566607],\n      [-123.50242431200404, 40.251484720515755],\n      [-123.50231724137606, 40.251457969060716],\n      [-123.50226378236862, 40.251444603824936],\n      [-123.50215673245243, 40.25142230854769],\n      [-123.50199624433095, 40.25139110411427],\n      [-123.50188469758052, 40.25136878890222],\n      [-123.501835670046, 40.251355393807074],\n      [-123.50178212508116, 40.25134205649706],\n      [-123.50172866651741, 40.25132869096991],\n      [-123.50167961872928, 40.25131083946392],\n      [-123.5016305709928, 40.25129298793858],\n      [-123.50158152330795, 40.25127513639387],\n      [-123.50148781859272, 40.25123502476214],\n      [-123.50139418009134, 40.25119042856248],\n      [-123.501251540292, 40.2511235735989],\n      [-123.50116231312224, 40.2510744913834],\n      [-123.50111331177405, 40.25105223263175],\n      [-123.50093047306844, 40.250945156884],\n      [-123.5008368818214, 40.250896153404405],\n      [-123.50078779450544, 40.25086938903535],\n      [-123.50073872754956, 40.250847080936445],\n      [-123.50068966065525, 40.250824772823115],\n      [-123.5006406599377, 40.250802513954014],\n      [-123.50059163371394, 40.25078911835412],\n      [-123.50053809011473, 40.25077124675713],\n      [-123.50048454659718, 40.25075790884865],\n      [-123.50038199733369, 40.250735631477944],\n      [-123.50006982767452, 40.25067764223972],\n      [-123.5000208019011, 40.25066424635902],\n      [-123.49997620714994, 40.25065535463067],\n      [-123.49994060670335, 40.250641968653],\n      [-123.4998736641904, 40.250615223520256],\n      [-123.49983799766865, 40.250606321950315],\n      [-123.49978899229293, 40.2505973822116],\n      [-123.49973992078199, 40.25059292688109],\n      [-123.49968637236304, 40.25059290802266],\n      [-123.49963291024673, 40.25059739463901],\n      [-123.49957938201949, 40.250601831963834],\n      [-123.49952142279913, 40.25060629875831],\n      [-123.49946348374063, 40.25061522176604],\n      [-123.49940988931539, 40.25062414342704],\n      [-123.49935197038643, 40.25063752261963],\n      [-123.49929848243276, 40.25065087228851],\n      [-123.49924490810552, 40.25066425011539],\n      [-123.4991914200006, 40.250682133434616],\n      [-123.49908889493629, 40.250717793077925],\n      [-123.49899080075024, 40.250753423163346],\n      [-123.49878561748093, 40.25083371097637],\n      [-123.49850026118771, 40.25094965819929],\n      [-123.49835312865487, 40.25100759769958],\n      [-123.4982594443004, 40.251043275270426],\n      [-123.49816141516892, 40.25107895402701],\n      [-123.49811235738123, 40.251096807470496],\n      [-123.49800981093668, 40.25112800996343],\n      [-123.49790717803697, 40.25115924054928],\n      [-123.4978581864765, 40.25117260938218],\n      [-123.49780910854156, 40.25118600637739],\n      [-123.49775561981022, 40.25119935531733],\n      [-123.49770211108708, 40.25120824789949],\n      [-123.49765301313185, 40.25121718848955],\n      [-123.49759507337103, 40.251226110418195],\n      [-123.49753711364728, 40.25123057597726],\n      [-123.49747915392743, 40.251235041498205],\n      [-123.49742117426881, 40.25123505064688],\n      [-123.49730516881911, 40.2512394759001],\n      [-123.49706890579267, 40.251239512989244],\n      [-123.49673890520322, 40.25123946928501],\n      [-123.49656953048044, 40.25123503051675],\n      [-123.49646249978568, 40.251235038124776],\n      [-123.49634658773705, 40.25122611416615],\n      [-123.49623502043603, 40.25121718890179],\n      [-123.49612360570521, 40.2512082845749],\n      [-123.49606558685088, 40.251199380149394],\n      [-123.49601208537628, 40.25119041818067],\n      [-123.49595856369072, 40.251181533626365],\n      [-123.49590504250146, 40.25116811526697],\n      [-123.49585608455378, 40.25115476608953],\n      [-123.49581588246514, 40.25113693012073],\n      [-123.49577576677261, 40.25111906595931],\n      [-123.495740061843, 40.251101249923956],\n      [-123.49569999257174, 40.251078978690074],\n      [-123.49566428820394, 40.25105662888295],\n      [-123.49562854387308, 40.25102990020864],\n      [-123.49559288594708, 40.25100314335703],\n      [-123.49555722807037, 40.250976386510445],\n      [-123.4955215504954, 40.250945173368166],\n      [-123.49549482072, 40.250918407205496],\n      [-123.49546364029588, 40.25088721405584],\n      [-123.49544138790405, 40.25085601159824],\n      [-123.49541902996228, 40.25081584732982],\n      [-123.49540123520643, 40.25077575233525],\n      [-123.49538780530011, 40.25073557882926],\n      [-123.49537893855255, 40.25069547460222],\n      [-123.49536557479625, 40.250655350446486],\n      [-123.49533875612954, 40.2505349678223],\n      [-123.49532089059049, 40.25045466133367],\n      [-123.49530754668164, 40.250418993675936],\n      [-123.49528975218053, 40.250378899107496],\n      [-123.49527189160507, 40.25033875531843],\n      [-123.49525403106217, 40.2502986115711],\n      [-123.49523617055182, 40.25025846786544],\n      [-123.49521389892608, 40.250222809691],\n      [-123.49519160761987, 40.25018269534191],\n      [-123.49516926996485, 40.25014698796976],\n      [-123.49514256759815, 40.25011135916613],\n      [-123.49511581888187, 40.25008013731888],\n      [-123.49508455354486, 40.2500444393148],\n      [-123.49505339377767, 40.25001770296292],\n      [-123.49501324016012, 40.24999092663522],\n      [-123.49497315270492, 40.24996419957048],\n      [-123.49492852195375, 40.24994185942196],\n      [-123.49487954621992, 40.249924053960235],\n      [-123.49483039839667, 40.2499017712282],\n      [-123.49478135666554, 40.24988391646796],\n      [-123.49468333946336, 40.249848256151445],\n      [-123.4945806730911, 40.24981255466083],\n      [-123.49447817904162, 40.249781330318385],\n      [-123.49426854155155, 40.24972337382137],\n      [-123.49417045863235, 40.24969219739807],\n      [-123.49412141756211, 40.24967434236245],\n      [-123.49407237654353, 40.24965648730749],\n      [-123.49402781286385, 40.249634196140306],\n      [-123.49398324923908, 40.24961190496362],\n      [-123.49393866607754, 40.24958515764648],\n      [-123.49389842740008, 40.24955840929393],\n      [-123.49386283877385, 40.24952716851288],\n      [-123.49382714427057, 40.249491499804115],\n      [-123.4937914694078, 40.24946028723078],\n      [-123.4936532086779, 40.24932208882796],\n      [-123.49358190682473, 40.249250723485595],\n      [-123.49351498869919, 40.24918826937485],\n      [-123.49344364006414, 40.24912584450768],\n      [-123.49336788047879, 40.249067904938435],\n      [-123.49329205501799, 40.249009916133446],\n      [-123.49325638101158, 40.24897870375568],\n      [-123.49321629588567, 40.248951976616596],\n      [-123.49317158108413, 40.24892966435414],\n      [-123.49312701879091, 40.248907373165956],\n      [-123.49308245655257, 40.24888508196826],\n      [-123.49303339758387, 40.24886277066468],\n      [-123.49298435817389, 40.24884491538482],\n      [-123.49293529856506, 40.24882713752536],\n      [-123.49288625925833, 40.24880928220678],\n      [-123.49283722000321, 40.248791426868856],\n      [-123.49278368325533, 40.24877808487174],\n      [-123.49273464410143, 40.248760229490344],\n      [-123.49268121326737, 40.248751315289866],\n      [-123.49262763001698, 40.24874237997362],\n      [-123.49257411290272, 40.248733493888224],\n      [-123.492520635525, 40.248728986356454],\n      [-123.49246715736508, 40.24872901225579],\n      [-123.49240918246106, 40.24872901799304],\n      [-123.492297663356, 40.24872900022364],\n      [-123.49207473023039, 40.24873792556757],\n      [-123.49190973325018, 40.248737932921806],\n      [-123.49169121168983, 40.24874237214534],\n      [-123.49147271772802, 40.24873794802462],\n      [-123.49136126611896, 40.24873344484406],\n      [-123.49119181977039, 40.24872902388018],\n      [-123.49102687127859, 40.24872008931996],\n      [-123.49091531436314, 40.24871115771589],\n      [-123.49086181735456, 40.24870672659702],\n      [-123.49080389073052, 40.24869779103348],\n      [-123.4907503276806, 40.248693310583455],\n      [-123.49069681149192, 40.2486844233418],\n      [-123.49058978022558, 40.24866211530626],\n      [-123.49048283446035, 40.248644312431466],\n      [-123.49042931947615, 40.248630891580085],\n      [-123.49032226939312, 40.24860412723056],\n      [-123.49027323099052, 40.24859080397278],\n      [-123.49021971619048, 40.248577383010165],\n      [-123.49017061177686, 40.2485640104397],\n      [-123.49012164065083, 40.24854620292918],\n      [-123.49007260347977, 40.248528346135544],\n      [-123.49002354716797, 40.24850603332167],\n      [-123.48997442375362, 40.24848820466611],\n      [-123.48992986423592, 40.24846591207905],\n      [-123.48988530477313, 40.248443619482494],\n      [-123.48984074536519, 40.24842132687644],\n      [-123.48979609966065, 40.24839906243519],\n      [-123.48976044842642, 40.24837230509677],\n      [-123.48972479724148, 40.24834554776338],\n      [-123.48968910778805, 40.24830987848122],\n      [-123.48965784895243, 40.24827418022871],\n      [-123.4896310868171, 40.248238502274624],\n      [-123.48960880221783, 40.24819838866064],\n      [-123.48958202102393, 40.2481582548095],\n      [-123.48949733400663, 40.24799769448194],\n      [-123.48943045325768, 40.24788621705059],\n      [-123.48938140737671, 40.24781042617834],\n      [-123.48935464577045, 40.247774748602176],\n      [-123.48932788421014, 40.2477390710533],\n      [-123.48930114181809, 40.2477078494321],\n      [-123.48926994986249, 40.24767220090328],\n      [-123.48923428050294, 40.24764098799542],\n      [-123.48919411462924, 40.24760975480249],\n      [-123.48915401491386, 40.24757857088102],\n      [-123.48911386827304, 40.24755179358547],\n      [-123.489069272124, 40.2475205893727],\n      [-123.48890425475894, 40.24741804246047],\n      [-123.48882402832, 40.2473645371374],\n      [-123.48878386306794, 40.247333303991546],\n      [-123.48874378304009, 40.24730657596748],\n      [-123.48870811443791, 40.24727536315738],\n      [-123.48867239885952, 40.24724855693962],\n      [-123.48864570434425, 40.24721292896403],\n      [-123.4886411887704, 40.247208452798866],\n      [-123.48867237196521, 40.24714600926394],\n      [-123.48871254807858, 40.24708360647659],\n      [-123.48875713541473, 40.247016719027116],\n      [-123.48880621910858, 40.24694985200246],\n      [-123.48885971396867, 40.24687850033623],\n      [-123.48892211643857, 40.24680268436063],\n      [-123.48908710507223, 40.24661095768229],\n      [-123.48915402283444, 40.24657524313467],\n      [-123.48922088200796, 40.24653069450316],\n      [-123.48929223864369, 40.24648163299288],\n      [-123.48936357600138, 40.24642811575623],\n      [-123.48943489405795, 40.24637014281394],\n      [-123.48951068923162, 40.246307734470804],\n      [-123.48971589631071, 40.24612045054868],\n      [-123.48992094931668, 40.2459331460768],\n      [-123.49001906410345, 40.24584397870963],\n      [-123.49010825181706, 40.24575482022058],\n      [-123.49018398847132, 40.24567451241001],\n      [-123.49021531142084, 40.245629942892464],\n      [-123.49024650110196, 40.245589807963874],\n      [-123.49027319434826, 40.24554965282758],\n      [-123.49029995363827, 40.24550954698915],\n      [-123.49031787257387, 40.24546942179432],\n      [-123.4903356582805, 40.24543373116518],\n      [-123.49034901368476, 40.245398069588944],\n      [-123.49035793980426, 40.245357904035004],\n      [-123.49036240703398, 40.245331162508116],\n      [-123.49036687425728, 40.245304421001435],\n      [-123.4903668258745, 40.24527320368627],\n      [-123.4903624335785, 40.24524198724679],\n      [-123.49035795494272, 40.24521079900694],\n      [-123.49034904706927, 40.24517510680497],\n      [-123.49032223768558, 40.245108215024246],\n      [-123.49042036969435, 40.24506366128428],\n      [-123.49051402546655, 40.24501900983049],\n      [-123.49060319205067, 40.24496555369556],\n      [-123.4906834328665, 40.24490757339314],\n      [-123.49076821757082, 40.24484067409154],\n      [-123.49084400846593, 40.24477826736617],\n      [-123.49090639564349, 40.244720304832406],\n      [-123.49095544619823, 40.2446623028122],\n      [-123.4910000664233, 40.2446043299133],\n      [-123.49103128307205, 40.244550801229664],\n      [-123.49105363925517, 40.24449733072544],\n      [-123.49106253613748, 40.24447056077167],\n      [-123.4910670028191, 40.24444381989197],\n      [-123.4910669152427, 40.24440369239202],\n      [-123.49107141027963, 40.244363556968764],\n      [-123.49106697886094, 40.24432343044254],\n      [-123.49106250068132, 40.244287710167995],\n      [-123.49105800225642, 40.244252067358666],\n      [-123.49104468308114, 40.24422086071658],\n      [-123.49103572706673, 40.244194108671415],\n      [-123.4910178639729, 40.244171820939926],\n      [-123.4910044696947, 40.2441584150618],\n      [-123.49098219579504, 40.244140611840166],\n      [-123.49095103508236, 40.24412719547442],\n      [-123.49091531017753, 40.24412277537658],\n      [-123.4908708122708, 40.24411385230897],\n      [-123.49082177041079, 40.24411384805894],\n      [-123.49075923888546, 40.244118315995145],\n      [-123.49050509415504, 40.24413615289168],\n      [-123.49044714523676, 40.244140612666975],\n      [-123.49040253358933, 40.24414057915765],\n      [-123.49034904241331, 40.24413614821347],\n      [-123.4903044115443, 40.24413165920806],\n      [-123.4902687539112, 40.24412275522597],\n      [-123.49024200342441, 40.244109387024054],\n      [-123.49020635522675, 40.24408263308943],\n      [-123.49017068784462, 40.24405142372438],\n      [-123.4901394121839, 40.24401127450449],\n      [-123.49010826978828, 40.24396669098006],\n      [-123.4900814520066, 40.24391765124981],\n      [-123.49005919760364, 40.24386414825231],\n      [-123.49003687716481, 40.24381059607249],\n      [-123.49002352993223, 40.243752629086444],\n      [-123.49001459256955, 40.24369471062277],\n      [-123.49000569469807, 40.24364117020886],\n      [-123.49000563675087, 40.24358764930751],\n      [-123.49001459034605, 40.24353862437571],\n      [-123.49002349705056, 40.243494005619304],\n      [-123.49003683277085, 40.24345389070644],\n      [-123.4900413768195, 40.24344497207545],\n      [-123.49019743520888, 40.24342712774713],\n      [-123.49052290726628, 40.24339593324221],\n      [-123.49066113245867, 40.24338256103779],\n      [-123.49080390155301, 40.24336026997165],\n      [-123.49092425587294, 40.24333792688709],\n      [-123.49098664198385, 40.243320121093696],\n      [-123.49104463756925, 40.243306722227416],\n      [-123.49109816439454, 40.24328444170758],\n      [-123.49115171051734, 40.243266616503156],\n      [-123.49119622560147, 40.24323984021876],\n      [-123.49123632992182, 40.243217548320104],\n      [-123.4912765672852, 40.243190822177326],\n      [-123.49131222300502, 40.24315957126973],\n      [-123.4913656810092, 40.243101619992196],\n      [-123.49141920584951, 40.24303918530308],\n      [-123.49147269179298, 40.2429678401022],\n      [-123.49151731835714, 40.242892020451414],\n      [-123.49155749534938, 40.24281177474361],\n      [-123.49159315668798, 40.242727053760554],\n      [-123.49161991115423, 40.24264679712621],\n      [-123.49164216941749, 40.24256652049365],\n      [-123.49165112093621, 40.242517496848855],\n      [-123.49174468591819, 40.242513029026554],\n      [-123.49189189304815, 40.242513012031544],\n      [-123.49195881060811, 40.24246398316929],\n      [-123.49203452972414, 40.24240153045796],\n      [-123.49207476595157, 40.242374804583456],\n      [-123.49211040107114, 40.24233909887676],\n      [-123.49214153925487, 40.24230790567877],\n      [-123.49217276373506, 40.24227668432637],\n      [-123.49220396871837, 40.24224100778894],\n      [-123.49223074367042, 40.24220536038602],\n      [-123.49225308938802, 40.242165209504165],\n      [-123.49227534872598, 40.242125086834584],\n      [-123.49229769436053, 40.24208493603422],\n      [-123.49231552364802, 40.24204484255884],\n      [-123.49235118289694, 40.24196012314518],\n      [-123.49240019532445, 40.241835213111045],\n      [-123.49243142428281, 40.24175052329131],\n      [-123.49244484361117, 40.241710381868806],\n      [-123.49245815709146, 40.24166581353308],\n      [-123.49247157636539, 40.24162567220405],\n      [-123.49248490655845, 40.24154540670667],\n      [-123.49250281903146, 40.241465133351674],\n      [-123.4925206228385, 40.24134028110748],\n      [-123.49252502695086, 40.241260025249275],\n      [-123.49252950065916, 40.24121543829709],\n      [-123.49252949787905, 40.24117528633716],\n      [-123.49252953890586, 40.241090576751056],\n      [-123.49252951383332, 40.241005818117856],\n      [-123.49252062624994, 40.240880966307245],\n      [-123.4925116933726, 40.240671434534306],\n      [-123.49249829045098, 40.24054210879083],\n      [-123.49248947259872, 40.2404529265717],\n      [-123.49244922807843, 40.240096193990496],\n      [-123.49240470686077, 40.23960121687386],\n      [-123.49239130440488, 40.23947189504652],\n      [-123.49237347231607, 40.23934260280165],\n      [-123.49235562082394, 40.23920885621052],\n      [-123.49233336000255, 40.23907506181226],\n      [-123.4923066195859, 40.23891008538489],\n      [-123.49226645561238, 40.238704949394176],\n      [-123.4922352420484, 40.23858455821796],\n      [-123.49221293708254, 40.238499852627726],\n      [-123.49218615599592, 40.23841958180098],\n      [-123.49214156930903, 40.23829024278694],\n      [-123.4920568474451, 40.23808067215192],\n      [-123.49190972711658, 40.2377105446434],\n      [-123.4918784980827, 40.23762584997484],\n      [-123.49184728861152, 40.23754561010397],\n      [-123.49183386562171, 40.237505451070234],\n      [-123.49181164824637, 40.23742071979323],\n      [-123.49178934462229, 40.237336016880825],\n      [-123.49175811378443, 40.23721117562806],\n      [-123.4917402398044, 40.23712644413284],\n      [-123.49173137944736, 40.23708182301924],\n      [-123.49172245221388, 40.23704168467066],\n      [-123.49171354994911, 40.236952539397016],\n      [-123.49170014995342, 40.23682322717699],\n      [-123.49169567716173, 40.236734053386236],\n      [-123.49169122381191, 40.23664933431451],\n      [-123.49168683736188, 40.23656013279818],\n      [-123.49168681566897, 40.23651553167432],\n      [-123.49168679397332, 40.23647093060711],\n      [-123.49169120084174, 40.23643083240656],\n      [-123.49169569402625, 40.23639070608552],\n      [-123.49170461428265, 40.23631040433508],\n      [-123.49174030417547, 40.23602056303407],\n      [-123.49174918454227, 40.23593588513622],\n      [-123.49176257813966, 40.23581100437151],\n      [-123.49178484942355, 40.23556130140811],\n      [-123.49181164122132, 40.2352580840575],\n      [-123.49182946879122, 40.235079717975616],\n      [-123.49183392023309, 40.23499053972365],\n      [-123.49183389828978, 40.234945940596475],\n      [-123.49183387634368, 40.23490134152596],\n      [-123.49183385439483, 40.23485674251213],\n      [-123.49182948955303, 40.23481214446078],\n      [-123.4918250578537, 40.23477202888525],\n      [-123.49181611141825, 40.23472743893237],\n      [-123.49180273332684, 40.23464273360551],\n      [-123.49178038420511, 40.23456244235758],\n      [-123.49177143784817, 40.23451785266499],\n      [-123.49175360598214, 40.23448218035248],\n      [-123.4917402499451, 40.23444207403662],\n      [-123.4917224181351, 40.234406401793855],\n      [-123.49169574826807, 40.23437071030187],\n      [-123.49166887861554, 40.23434393432361],\n      [-123.49162880784577, 40.234317217371405],\n      [-123.4915887099297, 40.23429935956661],\n      [-123.49153960134835, 40.234281538782845],\n      [-123.49148610334036, 40.23426812381556],\n      [-123.49143258513445, 40.234254786226984],\n      [-123.49137908721977, 40.23424137120272],\n      [-123.49132109329703, 40.23423246754437],\n      [-123.49126759463263, 40.2342235840517],\n      [-123.49120970650834, 40.23421910634392],\n      [-123.49115168540558, 40.23421906170396],\n      [-123.49109364407377, 40.2342190944321],\n      [-123.49104020367439, 40.23422357335833],\n      [-123.49098228743978, 40.23423248622254],\n      [-123.49092421879799, 40.2342413779708],\n      [-123.49087073080099, 40.234254793339986],\n      [-123.49081283389303, 40.23426816029209],\n      [-123.4907592991311, 40.234285980554716],\n      [-123.49064778103497, 40.23431719581937],\n      [-123.49032230288068, 40.23441085327158],\n      [-123.49016615436514, 40.23445542513568],\n      [-123.49005921724994, 40.234486631901106],\n      [-123.48995217444286, 40.234513412501656],\n      [-123.48989861997158, 40.23452677813834],\n      [-123.48984519862358, 40.23453571060071],\n      [-123.48978712964842, 40.234544601671615],\n      [-123.48973368903923, 40.23454907983984],\n      [-123.48967577245224, 40.234557991922],\n      [-123.48951073694195, 40.23457133550881],\n      [-123.48939929341331, 40.23458475357813],\n      [-123.48934571961763, 40.234593664666576],\n      [-123.4892922321367, 40.23460254756209],\n      [-123.48923874359106, 40.234615962073846],\n      [-123.48918518895066, 40.23462932731284],\n      [-123.48913614868769, 40.23464716708073],\n      [-123.48908712757147, 40.23466946107677],\n      [-123.48903810641524, 40.23469175505994],\n      [-123.48899342804064, 40.23471404826722],\n      [-123.48889540468653, 40.23476309043253],\n      [-123.48860993288119, 40.234910243366656],\n      [-123.48816848854344, 40.235128740221754],\n      [-123.48807046366177, 40.23517778205908],\n      [-123.48797678145156, 40.235226823144394],\n      [-123.4876468345371, 40.23540965215975],\n      [-123.48750855694692, 40.23548548967522],\n      [-123.48733024807632, 40.23557912978276],\n      [-123.48719203692607, 40.23565048463858],\n      [-123.48709833408135, 40.23569507108207],\n      [-123.48705372140869, 40.235712881410585],\n      [-123.48700469845323, 40.235735174936735],\n      [-123.48696015179237, 40.23575303448706],\n      [-123.48691110981868, 40.23577087359661],\n      [-123.48685757252979, 40.23578869225776],\n      [-123.4868085115622, 40.235802076933886],\n      [-123.48670591320572, 40.23583328017935],\n      [-123.4863938029382, 40.23591803042803],\n      [-123.48623780011411, 40.23596261834098],\n      [-123.48607723431857, 40.23601166814548],\n      [-123.48571162218587, 40.2361231435955],\n      [-123.48555546600659, 40.23616770946926],\n      [-123.48539946201653, 40.23621229621296],\n      [-123.48529686233145, 40.23624349818063],\n      [-123.48519430985384, 40.236270294850335],\n      [-123.4851407529001, 40.23628365826304],\n      [-123.48503377258496, 40.236305951635345],\n      [-123.4849222969133, 40.23632822436074],\n      [-123.48481086853187, 40.23634609174222],\n      [-123.48453881769613, 40.23639511123791],\n      [-123.48442738918418, 40.23641297816413],\n      [-123.48431589456804, 40.23643079570563],\n      [-123.48415087144498, 40.236453116276486],\n      [-123.48393235869642, 40.23648431665589],\n      [-123.48376290789037, 40.23650213329707],\n      [-123.48365146058555, 40.23651554479602],\n      [-123.48341514782767, 40.23653782290456],\n      [-123.48323679106855, 40.23656010107926],\n      [-123.48312527594688, 40.236577994583655],\n      [-123.48306729099055, 40.23658685356194],\n      [-123.48296478664972, 40.236604710717245],\n      [-123.48292013512675, 40.23661361040436],\n      [-123.48287561747041, 40.23661807666126],\n      [-123.48283991946765, 40.23661810857286],\n      [-123.48280869998509, 40.23660917469077],\n      [-123.4827908632685, 40.236591344466525],\n      [-123.4827774372656, 40.23656903113736],\n      [-123.48276855585833, 40.23653780131439],\n      [-123.48276408340493, 40.23650662031818],\n      [-123.48275967877481, 40.236470956705375],\n      [-123.48275070468821, 40.236355007433474],\n      [-123.48275071074971, 40.236314860897735],\n      [-123.48274179238413, 40.23627472237318],\n      [-123.48273289254264, 40.23623903834995],\n      [-123.48271954503562, 40.23619892851728],\n      [-123.48270613148445, 40.236158769475544],\n      [-123.48268385963442, 40.2361186676885],\n      [-123.48266601698256, 40.23607853733667],\n      [-123.482643697645, 40.236042840809276],\n      [-123.48259465901234, 40.23596261685214],\n      [-123.48254559148177, 40.23589125262065],\n      [-123.48249207650468, 40.235815462695115],\n      [-123.48243415286518, 40.23573962408054],\n      [-123.48237614311034, 40.23566381374439],\n      [-123.48234939513402, 40.2356281461444],\n      [-123.48222902016903, 40.23561926331197],\n      [-123.482108628687, 40.23560139414999],\n      [-123.48197929286269, 40.23558361012043],\n      [-123.4818455133962, 40.235552336533516],\n      [-123.48170726645884, 40.23551671435934],\n      [-123.48156016543346, 40.23547208555],\n      [-123.48139511172582, 40.235423045989776],\n      [-123.48118560486454, 40.235351688988146],\n      [-123.4810250970888, 40.23529373276652],\n      [-123.48089129425219, 40.23524023551681],\n      [-123.48077086328304, 40.23519115620173],\n      [-123.48066389959975, 40.23513768472259],\n      [-123.48056579425524, 40.23508415620016],\n      [-123.48047216598071, 40.235026194100456],\n      [-123.48037850144912, 40.23495932339304],\n      [-123.48028490530625, 40.23488797026364],\n      [-123.48018677796169, 40.23480768783485],\n      [-123.48008861453087, 40.234718496934725],\n      [-123.4799816252595, 40.23461597214842],\n      [-123.47983447472825, 40.2344732354953],\n      [-123.47972293715763, 40.23435732761784],\n      [-123.4796204286225, 40.234245838391544],\n      [-123.47951790246178, 40.23412989519488],\n      [-123.47942419619532, 40.23400951860907],\n      [-123.47933507172112, 40.23388913499835],\n      [-123.47925035844848, 40.233764269128194],\n      [-123.4791700745135, 40.2336393751925],\n      [-123.47909867633683, 40.23351009732634],\n      [-123.47902734677044, 40.23337633761956],\n      [-123.47896495941913, 40.23324702487607],\n      [-123.47890253617514, 40.233108804424695],\n      [-123.47884897084111, 40.2329705276639],\n      [-123.47879996669543, 40.23283232151282],\n      [-123.47875537345884, 40.23268963346382],\n      [-123.47871968586463, 40.23254248443555],\n      [-123.47868399848976, 40.232395336005915],\n      [-123.4786394313551, 40.23238643755933],\n      [-123.47859043771781, 40.232373036104725],\n      [-123.47853686305511, 40.23235964191071],\n      [-123.47848776508955, 40.23234181458707],\n      [-123.47843875349703, 40.23232395909431],\n      [-123.4783896556348, 40.23230613173189],\n      [-123.47834512080124, 40.23228384311401],\n      [-123.47830058602248, 40.23226155448664],\n      [-123.47825596717391, 40.23223476264249],\n      [-123.47821580478076, 40.23220361512514],\n      [-123.47818009138103, 40.232172361850694],\n      [-123.47814001543378, 40.23214118620255],\n      [-123.478104302151, 40.23210993295082],\n      [-123.4780686549796, 40.232078728961866],\n      [-123.47803298981712, 40.232043071052324],\n      [-123.47800177140482, 40.23201183873595],\n      [-123.47797053499974, 40.23197615251094],\n      [-123.47793936470374, 40.23194051556052],\n      [-123.47791705172241, 40.231904821931934],\n      [-123.4778992334591, 40.23186914923335],\n      [-123.47788582581376, 40.23182899431143],\n      [-123.4778769308963, 40.23179331423511],\n      [-123.4778725126279, 40.231753201199076],\n      [-123.4778724366548, 40.231713088008604],\n      [-123.47787242896676, 40.23166849282976],\n      [-123.47787693396398, 40.23162837248894],\n      [-123.47788137289677, 40.23158820294394],\n      [-123.4778858778729, 40.23154808269468],\n      [-123.47789029651861, 40.23150799063967],\n      [-123.4778992300585, 40.231467842132524],\n      [-123.4779125921608, 40.23142766532068],\n      [-123.47792150539371, 40.23138759430172],\n      [-123.47793936207407, 40.2313474384774],\n      [-123.47795721872032, 40.23130728269583],\n      [-123.47797500705916, 40.231271608939885],\n      [-123.47799727193627, 40.23123150228254],\n      [-123.47801964114215, 40.231195821342375],\n      [-123.4780687036219, 40.23112000553059],\n      [-123.47809541494313, 40.231084324476846],\n      [-123.4781221922751, 40.231048692700774],\n      [-123.47814892157639, 40.231017465506284],\n      [-123.47818012736654, 40.230981805420186],\n      [-123.47821141942644, 40.2309461172115],\n      [-123.47824698541106, 40.2309149107481],\n      [-123.47828713225334, 40.230883697031004],\n      [-123.47847444801728, 40.23072761523141],\n      [-123.47851459455526, 40.230696401580325],\n      [-123.47855022836313, 40.23066071331561],\n      [-123.47858145171654, 40.23062950720791],\n      [-123.47861265691203, 40.230593847369406],\n      [-123.47863936749876, 40.2305581666941],\n      [-123.4786662304139, 40.2305225071469],\n      [-123.47868399973771, 40.23048238032266],\n      [-123.47870185534502, 40.230442225392764],\n      [-123.47871528242638, 40.23040209889451],\n      [-123.47875988754198, 40.2302772657149],\n      [-123.4787776566713, 40.23023713915464],\n      [-123.47879103569475, 40.23020141733109],\n      [-123.47881329928431, 40.230161311706155],\n      [-123.47883566729098, 40.230125631661245],\n      [-123.47886237740725, 40.23008995140015],\n      [-123.47889811280376, 40.23006322022609],\n      [-123.47893376395538, 40.230031986135245],\n      [-123.47897835407602, 40.230009729242795],\n      [-123.47902294626061, 40.22998294127729],\n      [-123.47907196475548, 40.22996065596549],\n      [-123.47911648870466, 40.22993834980248],\n      [-123.47936624751678, 40.229826887526976],\n      [-123.47946437022223, 40.22978228856135],\n      [-123.47951338835696, 40.22976000313349],\n      [-123.47955798005422, 40.22973321509144],\n      [-123.47960263775809, 40.22970647629366],\n      [-123.47964271460913, 40.22967974483149],\n      [-123.47967836501262, 40.22964851078765],\n      [-123.47970958693757, 40.22961730519566],\n      [-123.47974087689731, 40.22958161785458],\n      [-123.47976758601374, 40.22954593788311],\n      [-123.4797943611411, 40.22951030718588],\n      [-123.47981664376762, 40.229470124717416],\n      [-123.47983892434074, 40.22943447328204],\n      [-123.47985677847525, 40.22939431933512],\n      [-123.4798746305681, 40.22935869641333],\n      [-123.47988358002938, 40.22932300377799],\n      [-123.4798924431596, 40.22928733932685],\n      [-123.47988797528879, 40.22925163361192],\n      [-123.47987906077486, 40.229211502808404],\n      [-123.4798568315623, 40.22918031526978],\n      [-123.47983002364042, 40.22914460414378],\n      [-123.4797988534366, 40.22910897073152],\n      [-123.47976761723429, 40.22907328809846],\n      [-123.47973197095516, 40.22904208747591],\n      [-123.47969181207391, 40.22900641251176],\n      [-123.47965609986238, 40.22897516267085],\n      [-123.47957586672311, 40.22890831559775],\n      [-123.47949558602267, 40.22884587285299],\n      [-123.4794554457692, 40.22881465149304],\n      [-123.47937518366146, 40.22875666231087],\n      [-123.47916557741132, 40.22860954765041],\n      [-123.47908529799336, 40.22854710503932],\n      [-123.4790051030533, 40.228489165185714],\n      [-123.47896496356601, 40.22845794390527],\n      [-123.47889360741361, 40.22839549382793],\n      [-123.4788223175374, 40.22833309304449],\n      [-123.47871529895498, 40.2282349892684],\n      [-123.47861270915786, 40.22813685724879],\n      [-123.47855023830016, 40.22807002389504],\n      [-123.4785190040195, 40.22803434184098],\n      [-123.47848785610596, 40.227998631664995],\n      [-123.47846111621955, 40.22796297053396],\n      [-123.47843437637907, 40.22792730943024],\n      [-123.47840755242468, 40.22788714570465],\n      [-123.47835850119696, 40.22781579527844],\n      [-123.47828716862158, 40.22769989815545],\n      [-123.47823811781589, 40.22762854803562],\n      [-123.47821580657194, 40.22759285884046],\n      [-123.47818457294021, 40.227557177141605],\n      [-123.47815783359549, 40.22752151635766],\n      [-123.47812661815243, 40.22749028806329],\n      [-123.47808654640517, 40.22745911648467],\n      [-123.47804640867419, 40.22742789567026],\n      [-123.47800627100774, 40.22739667486414],\n      [-123.4779616572613, 40.22736988650487],\n      [-123.47791702331526, 40.22734317553127],\n      [-123.47768964177395, 40.2272049071643],\n      [-123.47764507649441, 40.22717371471066],\n      [-123.47760046327201, 40.22714692632849],\n      [-123.47755589813349, 40.227115733878584],\n      [-123.47751576119363, 40.227084513112956],\n      [-123.47747562431827, 40.22705329235562],\n      [-123.47739975861082, 40.22699089994065],\n      [-123.4773240477622, 40.22692399799415],\n      [-123.4772928154535, 40.22688831663524],\n      [-123.47725715510242, 40.22685266360653],\n      [-123.47722592290725, 40.22681698229442],\n      [-123.47719469076668, 40.226781301006554],\n      [-123.47716795281049, 40.2267456406858],\n      [-123.47714562499326, 40.226705498835656],\n      [-123.4771322854589, 40.2266653989149],\n      [-123.47711887990249, 40.2266252497939],\n      [-123.47710995049746, 40.22658066842119],\n      [-123.47710102110852, 40.22653608710394],\n      [-123.47708325946883, 40.22640676121216],\n      [-123.47707434811531, 40.226366633325746],\n      [-123.47706092471226, 40.226322031326966],\n      [-123.47704751931434, 40.22628188258524],\n      [-123.47702970388814, 40.22624621537827],\n      [-123.4770029663949, 40.22621055554338],\n      [-123.47697175285354, 40.226179327972424],\n      [-123.47693604300214, 40.22615261003491],\n      [-123.47690033549983, 40.22612136153287],\n      [-123.47686021800456, 40.226094594506414],\n      [-123.47682016661007, 40.226067876724166],\n      [-123.47677555518, 40.226041088736125],\n      [-123.47673535154902, 40.22601434985354],\n      [-123.47669082423114, 40.22599206427084],\n      [-123.47664621298468, 40.225965276271594],\n      [-123.47659710543863, 40.22594299784222],\n      [-123.47655257829314, 40.225920712231485],\n      [-123.47650355717556, 40.22589840563331],\n      [-123.47640095271116, 40.225858252703034],\n      [-123.47630286040494, 40.225822573828715],\n      [-123.47624934320643, 40.2258047766855],\n      [-123.47620034033955, 40.22578692312635],\n      [-123.47614675721016, 40.22576907669324],\n      [-123.47609325806471, 40.22575573261635],\n      [-123.47603971080126, 40.225746792404344],\n      [-123.47598622961614, 40.22573790140444],\n      [-123.47593276873263, 40.225728932988304],\n      [-123.47587472517692, 40.22572450219112],\n      [-123.47564740829347, 40.2257111402066],\n      [-123.47559386129124, 40.22570219972766],\n      [-123.47554039819329, 40.22569776159246],\n      [-123.47548685125703, 40.22568882105007],\n      [-123.47543776270486, 40.225670995252365],\n      [-123.4753887605128, 40.22565314129412],\n      [-123.47534414823122, 40.22563088337263],\n      [-123.47530405024189, 40.22560856909771],\n      [-123.47525944053567, 40.22558178065715],\n      ...]]},\n   'id': '00010000000000001134',\n   'properties': {'Asmnt_Type': 'Extended',\n    'BurnBndAc': 1068802,\n    'BurnBndLat': '39.94',\n    'BurnBndLon': '-123.03',\n    'Comment': 'CA4012512307320200818, CA4008712298420200819, CA4012212284320201209, CA4009612273420200818, CA3982412319720200910, CA3990412308720200816, CA3976512267320200816, CA3994412291720200819, CA3990812270820200816, CA3953612293920200819, CA3959612274820200817, a',\n    'Event_ID': 'CA3966012280920200817',\n    'High_T': 550,\n    'Ig_Date': 1597647600000,\n    'IncGreen_T': -150,\n    'Incid_Name': 'AUGUST COMPLEX',\n    'Incid_Type': 'Wildfire',\n    'Low_T': 110,\n    'Map_ID': 10021108,\n    'Map_Prog': 'MTBS',\n    'Mod_T': 309,\n    'NoData_T': -970,\n    'Perim_ID': '804503220201019',\n    'Post_ID': '804503220210718',\n    'Pre_ID': '804503220200715',\n    'dNBR_offst': 37,\n    'dNBR_stdDv': 34,\n    'irwinID': 'EE343B88-0ADB-4C25-B744-6B4CE9DCC6DA'}}]}\n\n\n\nMap = geemap.Map(center=[39.9, -122.9], zoom=8.7)\nMap\n\n\n\n\n\nMap.addLayer(aug_complex, {}, \"August Complex Boundary\")\n#Map.centerObject(selected_counties, zoom = 9);\n#Map.remove_ee_layer('Boundaries')\n\nThe code below is outlining and saving time frames before the start of the fire and after the end of the fire. We chose to do ~15 day timeframes because the Sentinel satellite images are taken approximately every 5 days. The ~15 day timeframe means that we will hopefully have 2-3 images to use in our analysis.\n\n# Start of fire August 16\n# End of fire November 12\nprefire_start = '2020-07-15';   \nprefire_end = '2020-07-30';\n\n\npostfire_start = '2020-11-13';\npostfire_end = '2020-11-30';\n# Load the Sentinel data\nimagery = ee.ImageCollection('COPERNICUS/S2')\n\n# Filter the Image collection based on the timeframes. \n# Filter the cells to the MTBS polygon.\nprefireImCol = ee.ImageCollection(imagery.filterDate(prefire_start, prefire_end).filterBounds(aug_complex));\npostfireImCol = ee.ImageCollection(imagery.filterDate(postfire_start, postfire_end).filterBounds(aug_complex));\n\n\n# Function to mask clouds from the pixel quality band of Sentinel-2 SR data.\ndef  maskS2sr(image):\n  # Bits 10 and 11 are clouds and cirrus, respectively.\n    cloudBitMask = ee.Number(2).pow(10).int();\n    cirrusBitMask = ee.Number(2).pow(11).int();\n  #Get the pixel QA band.\n    qa = image.select('QA60');\n  #All flags should be set to zero, indicating clear conditions.\n    mask = qa.bitwiseAnd(cloudBitMask).eq(0).bitwiseAnd(cirrusBitMask).eq(0);\n  #Return the masked image, scaled to TOA reflectance, without the QA bands.\n    return image.updateMask(mask).copyProperties(image, [\"system:time_start\"]);\n\n\n# Apply platform-specific cloud mask\nprefire_CM_ImCol = prefireImCol.map(maskS2sr);\npostfire_CM_ImCol = postfireImCol.map(maskS2sr);\n\nThe code below creates a mosaic of images if our polygon includes the boundaries between images. It creates and saves one continuous image instead of multiple images.\n\n# If multiple images in area creates mosaic and clips otherwise only clips\n# Without CLoud Mask\n\npre_mos = prefireImCol.mosaic().clip(aug_complex);\npost_mos = postfireImCol.mosaic().clip(aug_complex);\n# With Cloud Mask\npre_cm_mos = prefire_CM_ImCol.mosaic().clip(aug_complex);\npost_cm_mos = postfire_CM_ImCol.mosaic().clip(aug_complex);\n\nSet up parameters for true color images using band 2, 3, and 4 from the Sentinel satellites, and adding non-cloud masked pre-fire and post-fire images and cloud masked pre-fire and post-fire images\n\n#visualization parameters for true color images\nvis = {'bands': ['B4', 'B3', 'B2'], 'max': 2000, 'gamma': 1.5};\n# Add the true color images to the map.\nMap.addLayer(pre_mos, vis,'Pre-fire image');\nMap.addLayer(post_mos, vis,'Post-fire image');\n\n\n#Add the true color images to the map.\nMap.addLayer(pre_cm_mos, vis,'Pre-fire True Color Image - Clouds masked');\nMap.addLayer(post_cm_mos, vis,'Post-fire True Color Image - Clouds masked');\nMap\n\n\n\n\n # Use Case Example\nFor our use case, we wanted to use Sentinel data to understand how severe the August Complex fire was in 2020. We will use the Sentinel data to calculate the NBR and dNBR of the fire. It lasted from August 16th to November 12th, and it burned over a million acres accross multiple national parks - largely in the Mendocino National Forest.\n\n\n\nThe Normalized Burn Ratio (NBR) is the ratio between NIR and SWIR, as shown by the equation below:\n\n\n\nimage.png\n\n\nThe Normalized Burn Ratio (NBR) is used to highlight burned areas and estimate burn severity, using near-infrared (NIR) and shortwave-infrared (SWIR) wavelengths. Healthy vegetation has very high NIR reflectance and low SWIR. Recently burned areas have a low NIR reflectance and high SWIR reflectance.\nThe spectral response curves of healthy vegetation versus burned vegetation is shown below. Since the two reach peak differences in the NIR and SWIR wavelengths, we can calculate the ratio of this difference to focus on where the August Complex fire burned.\n\n\n\nimage.png\n\n\nPreparing pre-fire and post-fire Normalized Burn Ratio (NBR) images:\n\npreNBR = pre_cm_mos.normalizedDifference(['B8', 'B12']);\npostNBR = post_cm_mos.normalizedDifference(['B8', 'B12']);\n\n\n\n\n\n#Burn Ratio Product - Greyscale\ngrey = ['white', 'black'];\nleft_layer = geemap.ee_tile_layer(preNBR, {'min': -1, 'max': 1, 'palette': grey}, 'Prefire Normalized Burn Ratio')\nright_layer = geemap.ee_tile_layer(postNBR, {'min': -1, 'max': 1, 'palette': grey}, 'Postfire Normalized Burn Ratio')\n\nMaps =  geemap.Map(center=[39.9, -122.9], zoom=8.7)\nMaps.split_map(left_layer, right_layer)\nMaps\n\n\n\n\n\n\n\n\n\n\nimage.png\n\n\nA higher value of dNBR indicates more severe damage, while areas with negative dNBR values may indicate regrowth following a fire.\nTable 1. Burn severity levels obtained calculating dNBR, proposed by USGS. \n\ndNBR_unscaled = preNBR.subtract(postNBR);\n\n#Scale product to USGS standards\ndNBR = dNBR_unscaled.multiply(1000);\n\n\nMap2 = geemap.Map(center=[39.9, -122.9], zoom=8.7)\nMap2.add_basemap('SATELLITE')\nMap2\n\n\n\n\n\n# dNBR greyscale\nMap2.addLayer(dNBR, {'min': -1000, 'max': 1000, 'palette': grey}, 'dNBR greyscale');\n\n\n#Define an SLD style of discrete intervals to apply to the image.\nsld_intervals = '<RasterSymbolizer>' + '<ColorMap type=\"intervals\" extended=\"false\" >' + '<ColorMapEntry color=\"#ffffff\" quantity=\"-500\" label=\"-500\"/>' + '<ColorMapEntry color=\"#7a8737\" quantity=\"-250\" label=\"-250\" />' + '<ColorMapEntry color=\"#acbe4d\" quantity=\"-100\" label=\"-100\" />' + '<ColorMapEntry color=\"#0ae042\" quantity=\"100\" label=\"100\" />' + '<ColorMapEntry color=\"#fff70b\" quantity=\"270\" label=\"270\" />' + '<ColorMapEntry color=\"#ffaf38\" quantity=\"440\" label=\"440\" />' + '<ColorMapEntry color=\"#ff641b\" quantity=\"660\" label=\"660\" />' + '<ColorMapEntry color=\"#a41fd6\" quantity=\"2000\" label=\"2000\" />' + '</ColorMap>' + '</RasterSymbolizer>';\n\n\nMap2.addLayer(dNBR.sldStyle(sld_intervals), {}, 'dNBR classified');\n#==========================================================================================\n#                                   ADD A LEGEND\n\nlegend_dict = {\n    \"Enhanced Regrowth, High\": '7a8737',\n    'Enhanced Regrowth, Low':  'acbe4d',\n    'Unburned': '0ae042',\n    'Low Severity': 'fff70b',\n    'Moderate-low Severity': 'ffaf38',\n    'Moderate-high Severity': 'ff641b',\n    'High Severity': 'a41fd6',\n    'NA': 'ffffff'}\n\n\nMap2.add_legend(legend_title = \"dNBR Classes\", legend_dict = legend_dict)\n\n\n ## Derive extent of burn severity classes\n\n\nthresholds = ee.Image([-1000, -251, -101, 99, 269, 439, 659, 2000]);\nclassified = dNBR.lt(thresholds).reduce('sum').toInt();\n\n\n#count number of pixels in entire layer\nallpix =  classified.updateMask(classified); #mask the entire layer\n\n\npixstats = allpix.reduceRegion(\n    reducer = ee.Reducer.count(),               # count pixels in a single class\n    geometry = aug_complex.geometry(),\n    scale = 30, \n    maxPixels = 10000000);\n\n\nallpixels = ee.Number(pixstats.get('sum')); # extract pixel count as a number\n\n\n#create an empty list to store area values in\narealist = [];\n\n\n# create a function to derive extent of one burn severity class\n#arguments are class number and class name\ndef areacount(cnr, name):\n    singleMask =  classified.updateMask(classified.eq(cnr)); # mask a single class // count pixels in a single class\n    stats = singleMask.reduceRegion(reducer = ee.Reducer.count(), geometry = aug_complex.geometry(), scale = 30, \n    maxPixels = 10000000);\n    pix =  ee.Number(stats.get('sum'));\n    hect = pix.multiply(900).divide(10000);               #Landsat pixel = 30m x 30m --> 900 sqm\n    perc = pix.divide(allpixels).multiply(10000).round().divide(100);   # get area percent by class and round to 2 decimals\n    arealist.append({'Class': name, 'Pixels': pix, 'Hectares': hect, 'Percentage': perc});\n\n# severity classes in different order\nnames2 = ['NA', 'High Severity', 'Moderate-high Severity',\n'Moderate-low Severity', 'Low Severity','Unburned', 'Enhanced Regrowth, Low', 'Enhanced Regrowth, High'];\n\n\ni = 0\nfor i in range(len(names2)):\n    if i < 8:\n        areacount(i, names2[i])\n        i + 1;\n\n\narealist\n\n[{'Class': 'NA',\n  'Pixels': <ee.ee_number.Number at 0x139953c40>,\n  'Hectares': <ee.ee_number.Number at 0x139953eb0>,\n  'Percentage': <ee.ee_number.Number at 0x139953910>},\n {'Class': 'High Severity',\n  'Pixels': <ee.ee_number.Number at 0x139953550>,\n  'Hectares': <ee.ee_number.Number at 0x139952950>,\n  'Percentage': <ee.ee_number.Number at 0x139950ee0>},\n {'Class': 'Moderate-high Severity',\n  'Pixels': <ee.ee_number.Number at 0x139953250>,\n  'Hectares': <ee.ee_number.Number at 0x13990abf0>,\n  'Percentage': <ee.ee_number.Number at 0x13990bdc0>},\n {'Class': 'Moderate-low Severity',\n  'Pixels': <ee.ee_number.Number at 0x139a002b0>,\n  'Hectares': <ee.ee_number.Number at 0x139a00460>,\n  'Percentage': <ee.ee_number.Number at 0x139a00550>},\n {'Class': 'Low Severity',\n  'Pixels': <ee.ee_number.Number at 0x139a00910>,\n  'Hectares': <ee.ee_number.Number at 0x139a00a90>,\n  'Percentage': <ee.ee_number.Number at 0x139a00cd0>},\n {'Class': 'Unburned',\n  'Pixels': <ee.ee_number.Number at 0x139a01090>,\n  'Hectares': <ee.ee_number.Number at 0x139a01210>,\n  'Percentage': <ee.ee_number.Number at 0x139a01450>},\n {'Class': 'Enhanced Regrowth, Low',\n  'Pixels': <ee.ee_number.Number at 0x139a01810>,\n  'Hectares': <ee.ee_number.Number at 0x139a01990>,\n  'Percentage': <ee.ee_number.Number at 0x139a01cc0>},\n {'Class': 'Enhanced Regrowth, High',\n  'Pixels': <ee.ee_number.Number at 0x139a020b0>,\n  'Hectares': <ee.ee_number.Number at 0x139a02230>,\n  'Percentage': <ee.ee_number.Number at 0x139a02470>}]\n\n\n\ntest = pd.DataFrame(arealist)\nprint(test)\n\n                     Class                                             Pixels  \\\n0                       NA  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n1            High Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n2   Moderate-high Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n3    Moderate-low Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n4             Low Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n5                 Unburned  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n6   Enhanced Regrowth, Low  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n7  Enhanced Regrowth, High  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n\n                                            Hectares  \\\n0  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n1  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n2  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n3  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n4  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n5  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n6  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n7  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n\n                                          Percentage  \n0  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n1  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n2  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n3  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n4  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n5  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n6  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n7  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n\n\n\n# Theres probably an easier way to extract the values but this works\n# pop each class into its own variable, then create a dictionary that uses .getInfo() on each value to convert from ee.Number to number\n\n#NA = arealist[0:1].pop()\n#High_Severity = arealist[0:2].pop()\n#Moderate_high_Severity = arealist[0:3].pop()\n#Moderate_low_Severity = arealist[0:4].pop()\n#Low_Severity = arealist[0:5].pop()\n#Unburned = arealist[0:6].pop()\n#Enhanced_Regrowth_Low = arealist[0:7].pop()\n#Enhanced_Regrowth_High = arealist[0:8].pop()\n\n\n# Takes quite  a while to run, so for the presentation I copied the results \n\n#stats = {'Class': ['NA', 'High Severity', 'Moderate-high Severity', 'Moderate-low Severity', 'Low Severity', 'Unburned', 'Enhanced Regrowth, Low', 'Enhanced Regrowth, High'], \n#  'Pixels': [NA['Pixels'].getInfo(), High_Severity['Pixels'].getInfo(), Moderate_high_Severity['Pixels'].getInfo(), Moderate_low_Severity['Pixels'].getInfo(), Low_Severity['Pixels'].getInfo(), Unburned['Pixels'].getInfo(), Enhanced_Regrowth_Low['Pixels'].getInfo(), Enhanced_Regrowth_High['Pixels'].getInfo() ],\n#  'Hectares': [NA['Hectares'].getInfo(), High_Severity['Hectares'].getInfo(), Moderate_high_Severity['Hectares'].getInfo(), Moderate_low_Severity['Hectares'].getInfo(), Low_Severity['Hectares'].getInfo(), Unburned['Hectares'].getInfo(), Enhanced_Regrowth_Low['Hectares'].getInfo(), Enhanced_Regrowth_High['Hectares'].getInfo()],\n#  'Percentage': [NA['Percentage'].getInfo(), High_Severity['Percentage'].getInfo(), Moderate_high_Severity['Percentage'].getInfo(), Moderate_low_Severity['Percentage'].getInfo(),Low_Severity['Percentage'].getInfo(), Unburned['Percentage'].getInfo(), Enhanced_Regrowth_Low['Percentage'].getInfo(),Enhanced_Regrowth_High['Percentage'].getInfo()]}\n\n\nstats = {'Class': ['NA',\n  'High Severity',\n  'Moderate-high Severity',\n  'Moderate-low Severity',\n  'Low Severity',\n  'Unburned',\n  'Enhanced Regrowth, Low',\n  'Enhanced Regrowth, High'],\n 'Pixels': [0, 1067623, 989630, 968749, 1061877, 1522197, 427507, 237862],\n 'Hectares': [0,\n  96086.07,\n  89066.7,\n  87187.41,\n  95568.93,\n  136997.73,\n  38475.63,\n  21407.58],\n 'Percentage': [0, 17.01, 15.77, 15.44, 16.92, 24.26, 6.81, 3.79]}\ndf_stats = pd.DataFrame(stats).set_index('Class')\ndf_stats\n\n\n\n\n\n  \n    \n      \n      Pixels\n      Hectares\n      Percentage\n    \n    \n      Class\n      \n      \n      \n    \n  \n  \n    \n      NA\n      0\n      0.00\n      0.00\n    \n    \n      High Severity\n      1067623\n      96086.07\n      17.01\n    \n    \n      Moderate-high Severity\n      989630\n      89066.70\n      15.77\n    \n    \n      Moderate-low Severity\n      968749\n      87187.41\n      15.44\n    \n    \n      Low Severity\n      1061877\n      95568.93\n      16.92\n    \n    \n      Unburned\n      1522197\n      136997.73\n      24.26\n    \n    \n      Enhanced Regrowth, Low\n      427507\n      38475.63\n      6.81\n    \n    \n      Enhanced Regrowth, High\n      237862\n      21407.58\n      3.79\n    \n  \n\n\n\n\n ### Use Case Discussion\nWe found that nearly half of the burned area was determined to be between Moderate-Low to High severity. Additionally, the High severity area was the second largest percentage of area classified.\n\ndf_stats['Hectares'].sort_values().plot.bar(color = ['gold', 'olive', 'darkkhaki'  , 'orange', 'orangered', 'yellow','purple', 'springgreen' ], width = 0.75)\nplt.ylabel('Hectares')\nplt.title('Burn Severity Analysis of 2020 August Complex Fire')\n\nText(0.5, 1.0, 'Burn Severity Analysis of 2020 August Complex Fire')\n\n\n\n\n\n\n# Pie Chart of Percentage by Class\ndf_stats.plot(kind = 'pie', y = 'Percentage',\n              colors = ['floralwhite', 'purple', 'orangered'  , 'orange', 'yellow', 'springgreen','darkkhaki', 'olive' ],\n             legend= False)\nplt.title('Burn Severity Analysis of 2020 August Complex Fire')\n\nText(0.5, 1.0, 'Burn Severity Analysis of 2020 August Complex Fire')\n\n\n\n\n\n ### Future Analyses\nWith more time, the data extracted could be analyzed with other characteristics of the environment, such as slope, aspect, wind direction, and humidity. These analyses would better inform wildfire researchers the nature of fires, how they spread, and what characteristics increase severity.\nAdditionally, this burn severity map can be compared to other wildfire burn severity maps as a function of time to see if the severity of the burns is getting worse. This would help inform wildfire researchers determine how quickly fires are increasingly negatively affecting the environment. Burn severity can also be compared temporally so that wildfire prevention can be implemented to the parts of the state most at risk.\n ### References\n\nSentinel data GEE page: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2\nUSFS MTBS Shapefile GEE page: https://developers.google.com/earth-engine/datasets/catalog/USFS_GTAC_MTBS_burned_area_boundaries_v1#description\nMTBS Project Page: https://www.mtbs.gov/\nStep by Step: Burn Severity mapping in Google Earth Engine https://code.earthengine.google.com/b455ba8cf4b5bee822bb7ff8935e6209"
  },
  {
    "objectID": "posts/SentinelNBR/index.html",
    "href": "posts/SentinelNBR/index.html",
    "title": "Environmental Data Science",
    "section": "",
    "text": "In this Jupyter Notebook, we first visualize true color images of the August Complex fire before and after it burned. Bands from the Sentinel 2 satellites as well as a dataset from USFS with wildfire boundaries are used for our analysis. Then, the Normalized Burn Ratio (NBR) is used to analyze burn severity, which is a measure of the degree to which a fire has affected the ecosystem. To compare these two images, we will compute the normalized difference to show where burn severity most significantly affected the vegetation and soil. We then added a scale to the normalized difference to show the levels of burn severity from the August Complex fire. Finally, we visualized the levels of severity to show the overall intensity. This link provides more information on the Sentinel 2 dataset that was used: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2.\n\n\n\nGuillermo Romero, Bren School of Environmental Science & Management, UCSB (romero61@ucsb.edu)\nWade Sedgewick, Bren School of Environmental Science & Management, UCSB (wsedgwick@ucsb.edu)\nHailey Veirs, Bren School of Environmental Science & Management, UCSB (hveirs@ucsb.edu)\n\n\n\n\n\nPurpose\nDataset Description\nData I/O\nMetadata Display\nTrue Color Visualization\nUse Case Examples\nUse Case Discussion\nReferences\n\n # Notebook Purpose Wildfires in California are becoming increasingly straining on the environment as well as the millions of people living in the state. As the world struggles to deal with climate change and droughts in the West, California must be proactive at addressing this threat. This notebook aims at visualizing the severity of the August Complex fire, the largest wildfire by area in California’s history. This fire began on August 16th and wasn’t contained until November 12th. California’s 7 biggest wildfires have all occurred in the past 5 years as California becomes a more draught-prone state, which means that this problem will only get worse. The wildfire started from multiple lightning strikes that resulted in 13 separate fires, and over the following week, they quickly joined to form the August Fire, which lasted just under three months.\nTo visualize the severity of the August Complex fire, we will do an analysis of the difference Normalized Burn Ratio (dNBR). Sentinel 2, the satellites used for Europe’s Earth observation program, will be used to conduct this analysis. The dNBR is an analysis on quantifying the damage that the fire had on the ecosystem. The NBR before and after the fires is first calculated. We use these images to calculate the dNBR, which shows the difference in burn severity. With Sentinel’s Visible and Near Infrared (VNIR) and Shortwave Infrared (SWIR) bands at 20 meter resolution, we are able to visualize the severity of the largest wildlife in California. Lastly, we display the proportion of level of severity, showing how detrimental it was to the environment.\n # Dataset Description Sentinel 2\nThe dataset we will be using is the Sentinel 2 which was collected and distributed by Copernicus, Europe’s Earth observation program. Sentinel 2 uses two separate satellites for increased temporal resolution. These satellites focus on terrestrial monitoring, whereas Sentinel 1 aims at capturing imagery of both marine and terrestrial areas. The Sentinel 2 satellites focus on monitoring coasts, vegetation and soil.\nResolution\nThe Sentinel 2 satellites collect 13 separate bands. Sentinel 2A was launched June, 2015 and Sentinel 2B was launched March, 2017. Because the Sentinel 2 program comprises of two satellites that rotate the earth every 10 days, an entire cycle is completed in only five days. This increased temporal resolution is more than three times higher than Landsat 8. This is due to the focus on land and near-shore monitoring. The Sentinel satellites collect 13 separate bands: the visible bands have a resolution of 10 meters, five 20 meter and one 10 meter Visible and Near Infrared bands, two 60 meter and two 20-meter Shortwave Infrared bands, and one 60 meter Ultra Blue band (for coastal sediment and aerosols). We will be using a 20-meter NIR band as well as a 20-meter SWIR band for our dNBR analysis.\nFile Format & Data Retrieval\nThe data format for Sentinel 2 are ImageCollections, which are a collection of all images as individual bands taken by Sentinel 2A and 2B over their lifetimes. For our analysis, we used Google Earth Engine.\nLimitations\nThe Sentinel 2 satellites have been in orbit for five and seven years, providing highly temporal and decently spatial resolution. However, there are some limitations in using the data. The most prominent is cloud coverage, which affects how much of the earth a satellite can record. Although trends can show where cloud coverage might be more difficult to work around, the randomness and frequency of clouds interfering with imagery collection can mean that researchers do not have access to satellite imagery at a certain date. Additionally, although 10 meters is an improvement to the 30-meter Landsat visible bands, this is still not at a resolution for spatially detailed analysis such as individual tree identification.\nMTBS Polygon Data\nWe will also use the US Forest Service’s Monitoring Trends in Burned Severity (MTBS) shapefiles with the Sentinel data. The data is made of shapefiles with several other saved variables such as the acerage of burned area, latitude longitude, ignition date, and dNBR values over certain thresholds. These shapefiles are delineated from Landsat imagery and burn severity index data at a map scale of 1:24,000 to 1:50,000. Additionally, all vector data is in Albers Equal Area projection.\nFor this notebook, we will be using the polygon geometry to help subset our Sentinel data to the burned area. Although the MTBS vector data includes high to low burn severity threshold data, it only includes the value that each threshold was determined as, not the area values that correspond to each threshold. Luckily, we can still use the vector data in our case example.\n # Data Input/Output\nFirst, import the packages we need.\n\n#1) Import all necessary packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport datetime\nimport ee\nimport geemap\n\n\n#ee.Authenticate()\n\n\nee.Initialize()\n\n\n# Loading Sentinel-2 MSI: MultiSpectral Instrument, Level-1C\nimagery = ee.ImageCollection('COPERNICUS/S2')\n#Loading Monitoring Trends in Burn Severity (MTBS) Feature Collection Dataset\nMTBS = ee.FeatureCollection(\"USFS/GTAC/MTBS/burned_area_boundaries/v1\")\n\n\nMap = geemap.Map(center=[39.9, -109], zoom=6.49)\nMap\n\n\n\n\n\nMap.addLayer(MTBS, {}, 'Boundaries')\n\n # Metadata Display\n\n# Show the metadata of the Sentinel raster data.\n#testimg = imagery.first()\n#testimg.getInfo()\n\n\n# Show the metadata of the MTBS vector data.\n#shape = MTBS.first()\n#shape.getInfo()\n#MTBS.limit(1).getInfo()\n\n\n# Below is an additional way to subset data using a Feature Collection:\n# Needs to be seperated into different code blocks to run\n#counties = ee.FeatureCollection(\"TIGER/2018/Counties\")\n#Map.addLayer(counties, {}, 'US Counties')\n##### DRAW POLYGON TO SELECT COUNTIES! ####\n#Map.draw_features\n#roi = ee.FeatureCollection(Map.draw_features)\n#selected_counties = counties.filterBounds(roi)\n#Map.addLayer(selected_counties, {}, \"Selected Counties\")\n#Map.centerObject(selected_counties, zoom = 8);\n#august_complex = MTBS.filterBounds(roi)\n#Map.addLayer(august_complex, {}, \"August Complex Boundary\")\n#Map.centerObject(august_complex, zoom = 8);\n#Map.remove_last_drawn()\n\n#Map.remove_ee_layer('US Counties')\n#Map.remove_ee_layer('August Complex Boundary')\n#c_polygon = selected_counties.geometry().geometries().filter(ee.Filter.hasType('item','Polygon')); \n#geometry = ee.Geometry.MultiPolygon(c_polygon)                     \n#geometry = ee.FeatureCollection(geometry)  \n#geemap.ee_to_shp(geometry, filename='../downloads/selected_counties.shp')\n\n # True Color Visualization\nStart off by making a true color image of our use case example. This will show how the Sentinel data looks, as well as how we filter it to based on the MTBS shapefile.\n\naug_complex = MTBS.filter(ee.Filter.eq('Incid_Name', 'AUGUST COMPLEX'));\n\n\n#august_complex.getInfo()\n#aug_complex.getInfo()\n#BurnBndAc  INT  Burn boundary acreage  1068802\n\n\nMap = geemap.Map(center=[39.9, -122.9], zoom=8.7)\nMap\n\n\n\n\n\nMap.addLayer(aug_complex, {}, \"August Complex Boundary\")\n#Map.centerObject(selected_counties, zoom = 9);\n#Map.remove_ee_layer('Boundaries')\n\nThe code below is outlining and saving time frames before the start of the fire and after the end of the fire. We chose to do ~15 day timeframes because the Sentinel satellite images are taken approximately every 5 days. The ~15 day timeframe means that we will hopefully have 2-3 images to use in our analysis.\n\n# Start of fire August 16\n# End of fire November 12\nprefire_start = '2020-07-15';   \nprefire_end = '2020-07-30';\n\n\npostfire_start = '2020-11-13';\npostfire_end = '2020-11-30';\n# Load the Sentinel data\nimagery = ee.ImageCollection('COPERNICUS/S2')\n\n# Filter the Image collection based on the timeframes. \n# Filter the cells to the MTBS polygon.\nprefireImCol = ee.ImageCollection(imagery.filterDate(prefire_start, prefire_end).filterBounds(aug_complex));\npostfireImCol = ee.ImageCollection(imagery.filterDate(postfire_start, postfire_end).filterBounds(aug_complex));\n\n\n# Function to mask clouds from the pixel quality band of Sentinel-2 SR data.\ndef  maskS2sr(image):\n  # Bits 10 and 11 are clouds and cirrus, respectively.\n    cloudBitMask = ee.Number(2).pow(10).int();\n    cirrusBitMask = ee.Number(2).pow(11).int();\n  #Get the pixel QA band.\n    qa = image.select('QA60');\n  #All flags should be set to zero, indicating clear conditions.\n    mask = qa.bitwiseAnd(cloudBitMask).eq(0).bitwiseAnd(cirrusBitMask).eq(0);\n  #Return the masked image, scaled to TOA reflectance, without the QA bands.\n    return image.updateMask(mask).copyProperties(image, [\"system:time_start\"]);\n\n\n# Apply platform-specific cloud mask\nprefire_CM_ImCol = prefireImCol.map(maskS2sr);\npostfire_CM_ImCol = postfireImCol.map(maskS2sr);\n\nThe code below creates a mosaic of images if our polygon includes the boundaries between images. It creates and saves one continuous image instead of multiple images.\n\n# If multiple images in area creates mosaic and clips otherwise only clips\n# Without CLoud Mask\n\npre_mos = prefireImCol.mosaic().clip(aug_complex);\npost_mos = postfireImCol.mosaic().clip(aug_complex);\n# With Cloud Mask\npre_cm_mos = prefire_CM_ImCol.mosaic().clip(aug_complex);\npost_cm_mos = postfire_CM_ImCol.mosaic().clip(aug_complex);\n\nSet up parameters for true color images using band 2, 3, and 4 from the Sentinel satellites, and adding non-cloud masked pre-fire and post-fire images and cloud masked pre-fire and post-fire images\n\n#visualization parameters for true color images\nvis = {'bands': ['B4', 'B3', 'B2'], 'max': 2000, 'gamma': 1.5};\n# Add the true color images to the map.\nMap.addLayer(pre_mos, vis,'Pre-fire image');\nMap.addLayer(post_mos, vis,'Post-fire image');\n\n\n#Add the true color images to the map.\nMapTrue = geemap.Map(center=[39.9, -122.9], zoom=8.7)\n\nMapTrue.addLayer(pre_cm_mos, vis,'Pre-fire True Color Image - Clouds masked');\nMapTrue.addLayer(post_cm_mos, vis,'Post-fire True Color Image - Clouds masked');\nMapTrue\n\n\n\n\n # Use Case Example\nFor our use case, we wanted to use Sentinel data to understand how severe the August Complex fire was in 2020. We will use the Sentinel data to calculate the NBR and dNBR of the fire. It lasted from August 16th to November 12th, and it burned over a million acres accross multiple national parks - largely in the Mendocino National Forest.\n\n\n\nThe Normalized Burn Ratio (NBR) is the ratio between NIR and SWIR, as shown by the equation below:\n\n\n\nimage.png\n\n\nThe Normalized Burn Ratio (NBR) is used to highlight burned areas and estimate burn severity, using near-infrared (NIR) and shortwave-infrared (SWIR) wavelengths. Healthy vegetation has very high NIR reflectance and low SWIR. Recently burned areas have a low NIR reflectance and high SWIR reflectance.\nThe spectral response curves of healthy vegetation versus burned vegetation is shown below. Since the two reach peak differences in the NIR and SWIR wavelengths, we can calculate the ratio of this difference to focus on where the August Complex fire burned.\n\n\n\nimage-2.png\n\n\nPreparing pre-fire and post-fire Normalized Burn Ratio (NBR) images:\n\npreNBR = pre_cm_mos.normalizedDifference(['B8', 'B12']);\npostNBR = post_cm_mos.normalizedDifference(['B8', 'B12']);\n\n\n\n\n\n#Burn Ratio Product - Greyscale\ngrey = ['white', 'black'];\nleft_layer = geemap.ee_tile_layer(preNBR, {'min': -1, 'max': 1, 'palette': grey}, 'Prefire Normalized Burn Ratio')\nright_layer = geemap.ee_tile_layer(postNBR, {'min': -1, 'max': 1, 'palette': grey}, 'Postfire Normalized Burn Ratio')\n\nMaps =  geemap.Map(center=[39.9, -122.9], zoom=8.7)\nMaps.split_map(left_layer, right_layer)\nMaps\n\n\n\n\n\n\n\n\n\n\nimage.png\n\n\nA higher value of dNBR indicates more severe damage, while areas with negative dNBR values may indicate regrowth following a fire.\nTable 1. Burn severity levels obtained calculating dNBR, proposed by USGS. \n\ndNBR_unscaled = preNBR.subtract(postNBR);\n\n#Scale product to USGS standards\ndNBR = dNBR_unscaled.multiply(1000);\n\n\nMap2 = geemap.Map(center=[39.9, -122.9], zoom=8.7)\nMap2.add_basemap('SATELLITE')\nMap2\n\n\n\n\n\n# dNBR greyscale\nMap2.addLayer(dNBR, {'min': -1000, 'max': 1000, 'palette': grey}, 'dNBR greyscale');\n\n\n#Define an SLD style of discrete intervals to apply to the image.\nsld_intervals = '<RasterSymbolizer>' + '<ColorMap type=\"intervals\" extended=\"false\" >' + '<ColorMapEntry color=\"#ffffff\" quantity=\"-500\" label=\"-500\"/>' + '<ColorMapEntry color=\"#7a8737\" quantity=\"-250\" label=\"-250\" />' + '<ColorMapEntry color=\"#acbe4d\" quantity=\"-100\" label=\"-100\" />' + '<ColorMapEntry color=\"#0ae042\" quantity=\"100\" label=\"100\" />' + '<ColorMapEntry color=\"#fff70b\" quantity=\"270\" label=\"270\" />' + '<ColorMapEntry color=\"#ffaf38\" quantity=\"440\" label=\"440\" />' + '<ColorMapEntry color=\"#ff641b\" quantity=\"660\" label=\"660\" />' + '<ColorMapEntry color=\"#a41fd6\" quantity=\"2000\" label=\"2000\" />' + '</ColorMap>' + '</RasterSymbolizer>';\n\n\nMap2.addLayer(dNBR.sldStyle(sld_intervals), {}, 'dNBR classified');\n#==========================================================================================\n#                                   ADD A LEGEND\n\nlegend_dict = {\n    \"Enhanced Regrowth, High\": '7a8737',\n    'Enhanced Regrowth, Low':  'acbe4d',\n    'Unburned': '0ae042',\n    'Low Severity': 'fff70b',\n    'Moderate-low Severity': 'ffaf38',\n    'Moderate-high Severity': 'ff641b',\n    'High Severity': 'a41fd6',\n    'NA': 'ffffff'}\n\n\nMap2.add_legend(legend_title = \"dNBR Classes\", legend_dict = legend_dict)\n\n\n ## Derive extent of burn severity classes\n\n\nthresholds = ee.Image([-1000, -251, -101, 99, 269, 439, 659, 2000]);\nclassified = dNBR.lt(thresholds).reduce('sum').toInt();\n\n\n#count number of pixels in entire layer\nallpix =  classified.updateMask(classified); #mask the entire layer\n\n\npixstats = allpix.reduceRegion(\n    reducer = ee.Reducer.count(),               # count pixels in a single class\n    geometry = aug_complex.geometry(),\n    scale = 30, \n    maxPixels = 10000000);\n\n\nallpixels = ee.Number(pixstats.get('sum')); # extract pixel count as a number\n\n\n#create an empty list to store area values in\narealist = [];\n\n\n# create a function to derive extent of one burn severity class\n#arguments are class number and class name\ndef areacount(cnr, name):\n    singleMask =  classified.updateMask(classified.eq(cnr)); # mask a single class // count pixels in a single class\n    stats = singleMask.reduceRegion(reducer = ee.Reducer.count(), geometry = aug_complex.geometry(), scale = 30, \n    maxPixels = 10000000);\n    pix =  ee.Number(stats.get('sum'));\n    hect = pix.multiply(900).divide(10000);               #Landsat pixel = 30m x 30m --> 900 sqm\n    perc = pix.divide(allpixels).multiply(10000).round().divide(100);   # get area percent by class and round to 2 decimals\n    arealist.append({'Class': name, 'Pixels': pix, 'Hectares': hect, 'Percentage': perc});\n\n# severity classes in different order\nnames2 = ['NA', 'High Severity', 'Moderate-high Severity',\n'Moderate-low Severity', 'Low Severity','Unburned', 'Enhanced Regrowth, Low', 'Enhanced Regrowth, High'];\n\n\ni = 0\nfor i in range(len(names2)):\n    if i < 8:\n        areacount(i, names2[i])\n        i + 1;\n\n\narealist\n\n[{'Class': 'NA',\n  'Pixels': <ee.ee_number.Number at 0x14786c760>,\n  'Hectares': <ee.ee_number.Number at 0x1478a5e20>,\n  'Percentage': <ee.ee_number.Number at 0x1478a5d60>},\n {'Class': 'High Severity',\n  'Pixels': <ee.ee_number.Number at 0x147455940>,\n  'Hectares': <ee.ee_number.Number at 0x147455be0>,\n  'Percentage': <ee.ee_number.Number at 0x147328910>},\n {'Class': 'Moderate-high Severity',\n  'Pixels': <ee.ee_number.Number at 0x147954f40>,\n  'Hectares': <ee.ee_number.Number at 0x147954490>,\n  'Percentage': <ee.ee_number.Number at 0x147943ca0>},\n {'Class': 'Moderate-low Severity',\n  'Pixels': <ee.ee_number.Number at 0x1479710d0>,\n  'Hectares': <ee.ee_number.Number at 0x147971250>,\n  'Percentage': <ee.ee_number.Number at 0x147971490>},\n {'Class': 'Low Severity',\n  'Pixels': <ee.ee_number.Number at 0x147971850>,\n  'Hectares': <ee.ee_number.Number at 0x1479719d0>,\n  'Percentage': <ee.ee_number.Number at 0x147971c10>},\n {'Class': 'Unburned',\n  'Pixels': <ee.ee_number.Number at 0x147971fd0>,\n  'Hectares': <ee.ee_number.Number at 0x14796b190>,\n  'Percentage': <ee.ee_number.Number at 0x14796b3d0>},\n {'Class': 'Enhanced Regrowth, Low',\n  'Pixels': <ee.ee_number.Number at 0x14796b790>,\n  'Hectares': <ee.ee_number.Number at 0x14796b910>,\n  'Percentage': <ee.ee_number.Number at 0x14796bb50>},\n {'Class': 'Enhanced Regrowth, High',\n  'Pixels': <ee.ee_number.Number at 0x14796bf10>,\n  'Hectares': <ee.ee_number.Number at 0x1479790d0>,\n  'Percentage': <ee.ee_number.Number at 0x147979310>}]\n\n\n\ntest = pd.DataFrame(arealist)\nprint(test)\n\n                     Class                                             Pixels  \\\n0                       NA  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n1            High Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n2   Moderate-high Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n3    Moderate-low Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n4             Low Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n5                 Unburned  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n6   Enhanced Regrowth, Low  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n7  Enhanced Regrowth, High  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n\n                                            Hectares  \\\n0  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n1  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n2  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n3  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n4  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n5  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n6  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n7  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n\n                                          Percentage  \n0  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n1  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n2  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n3  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n4  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n5  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n6  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n7  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n\n\n\n# Theres probably an easier way to extract the values but this works\n# pop each class into its own variable, then create a dictionary that uses .getInfo() on each value to convert from ee.Number to number\n\n#NA = arealist[0:1].pop()\n#High_Severity = arealist[0:2].pop()\n#Moderate_high_Severity = arealist[0:3].pop()\n#Moderate_low_Severity = arealist[0:4].pop()\n#Low_Severity = arealist[0:5].pop()\n#Unburned = arealist[0:6].pop()\n#Enhanced_Regrowth_Low = arealist[0:7].pop()\n#Enhanced_Regrowth_High = arealist[0:8].pop()\n\n\n# Takes quite  a while to run, so for the presentation I copied the results \n\n#stats = {'Class': ['NA', 'High Severity', 'Moderate-high Severity', 'Moderate-low Severity', 'Low Severity', 'Unburned', 'Enhanced Regrowth, Low', 'Enhanced Regrowth, High'], \n#  'Pixels': [NA['Pixels'].getInfo(), High_Severity['Pixels'].getInfo(), Moderate_high_Severity['Pixels'].getInfo(), Moderate_low_Severity['Pixels'].getInfo(), Low_Severity['Pixels'].getInfo(), Unburned['Pixels'].getInfo(), Enhanced_Regrowth_Low['Pixels'].getInfo(), Enhanced_Regrowth_High['Pixels'].getInfo() ],\n#  'Hectares': [NA['Hectares'].getInfo(), High_Severity['Hectares'].getInfo(), Moderate_high_Severity['Hectares'].getInfo(), Moderate_low_Severity['Hectares'].getInfo(), Low_Severity['Hectares'].getInfo(), Unburned['Hectares'].getInfo(), Enhanced_Regrowth_Low['Hectares'].getInfo(), Enhanced_Regrowth_High['Hectares'].getInfo()],\n#  'Percentage': [NA['Percentage'].getInfo(), High_Severity['Percentage'].getInfo(), Moderate_high_Severity['Percentage'].getInfo(), Moderate_low_Severity['Percentage'].getInfo(),Low_Severity['Percentage'].getInfo(), Unburned['Percentage'].getInfo(), Enhanced_Regrowth_Low['Percentage'].getInfo(),Enhanced_Regrowth_High['Percentage'].getInfo()]}\n\n\nstats = {'Class': ['NA',\n  'High Severity',\n  'Moderate-high Severity',\n  'Moderate-low Severity',\n  'Low Severity',\n  'Unburned',\n  'Enhanced Regrowth, Low',\n  'Enhanced Regrowth, High'],\n 'Pixels': [0, 1067623, 989630, 968749, 1061877, 1522197, 427507, 237862],\n 'Hectares': [0,\n  96086.07,\n  89066.7,\n  87187.41,\n  95568.93,\n  136997.73,\n  38475.63,\n  21407.58],\n 'Percentage': [0, 17.01, 15.77, 15.44, 16.92, 24.26, 6.81, 3.79]}\ndf_stats = pd.DataFrame(stats).set_index('Class')\ndf_stats\n\n\n\n\n\n  \n    \n      \n      Pixels\n      Hectares\n      Percentage\n    \n    \n      Class\n      \n      \n      \n    \n  \n  \n    \n      NA\n      0\n      0.00\n      0.00\n    \n    \n      High Severity\n      1067623\n      96086.07\n      17.01\n    \n    \n      Moderate-high Severity\n      989630\n      89066.70\n      15.77\n    \n    \n      Moderate-low Severity\n      968749\n      87187.41\n      15.44\n    \n    \n      Low Severity\n      1061877\n      95568.93\n      16.92\n    \n    \n      Unburned\n      1522197\n      136997.73\n      24.26\n    \n    \n      Enhanced Regrowth, Low\n      427507\n      38475.63\n      6.81\n    \n    \n      Enhanced Regrowth, High\n      237862\n      21407.58\n      3.79\n    \n  \n\n\n\n\n ### Use Case Discussion\nWe found that nearly half of the burned area was determined to be between Moderate-Low to High severity. Additionally, the High severity area was the second largest percentage of area classified.\n\ndf_stats['Hectares'].sort_values().plot.bar(color = ['gold', 'olive', 'darkkhaki'  , 'orange', 'orangered', 'yellow','purple', 'springgreen' ], width = 0.75)\nplt.ylabel('Hectares')\nplt.title('Burn Severity Analysis of 2020 August Complex Fire')\n\nText(0.5, 1.0, 'Burn Severity Analysis of 2020 August Complex Fire')\n\n\n\n\n\n\n# Pie Chart of Percentage by Class\ndf_stats.plot(kind = 'pie', y = 'Percentage',\n              colors = ['floralwhite', 'purple', 'orangered'  , 'orange', 'yellow', 'springgreen','darkkhaki', 'olive' ],\n             legend= False)\nplt.title('Burn Severity Analysis of 2020 August Complex Fire')\n\nText(0.5, 1.0, 'Burn Severity Analysis of 2020 August Complex Fire')\n\n\n\n\n\n ### Future Analyses\nWith more time, the data extracted could be analyzed with other characteristics of the environment, such as slope, aspect, wind direction, and humidity. These analyses would better inform wildfire researchers the nature of fires, how they spread, and what characteristics increase severity.\nAdditionally, this burn severity map can be compared to other wildfire burn severity maps as a function of time to see if the severity of the burns is getting worse. This would help inform wildfire researchers determine how quickly fires are increasingly negatively affecting the environment. Burn severity can also be compared temporally so that wildfire prevention can be implemented to the parts of the state most at risk.\n ### References\n\nSentinel data GEE page: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2\nUSFS MTBS Shapefile GEE page: https://developers.google.com/earth-engine/datasets/catalog/USFS_GTAC_MTBS_burned_area_boundaries_v1#description\nMTBS Project Page: https://www.mtbs.gov/\nStep by Step: Burn Severity mapping in Google Earth Engine https://code.earthengine.google.com/b455ba8cf4b5bee822bb7ff8935e6209"
  },
  {
    "objectID": "posts/SentinelNBR/dnbr2.html",
    "href": "posts/SentinelNBR/dnbr2.html",
    "title": "Environmental Data Science",
    "section": "",
    "text": "In this Jupyter Notebook, we first visualize true color images of the August Complex fire before and after it burned. Bands from the Sentinel 2 satellites as well as a dataset from USFS with wildfire boundaries are used for our analysis. Then, the Normalized Burn Ratio (NBR) is used to analyze burn severity, which is a measure of the degree to which a fire has affected the ecosystem. To compare these two images, we will compute the normalized difference to show where burn severity most significantly affected the vegetation and soil. We then added a scale to the normalized difference to show the levels of burn severity from the August Complex fire. Finally, we visualized the levels of severity to show the overall intensity. This link provides more information on the Sentinel 2 dataset that was used: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2.\n\n\n\nGuillermo Romero, Bren School of Environmental Science & Management, UCSB (romero61@ucsb.edu)\nWade Sedgewick, Bren School of Environmental Science & Management, UCSB (wsedgwick@ucsb.edu)\nHailey Veirs, Bren School of Environmental Science & Management, UCSB (hveirs@ucsb.edu)\n\n\n\n\n\nPurpose\nDataset Description\nData I/O\nMetadata Display\nTrue Color Visualization\nUse Case Examples\nUse Case Discussion\nReferences"
  },
  {
    "objectID": "posts/SentinelNBR/dnbr2.html#nbrs-in-greyscale",
    "href": "posts/SentinelNBR/dnbr2.html#nbrs-in-greyscale",
    "title": "Environmental Data Science",
    "section": "NBRs in greyscale",
    "text": "NBRs in greyscale\nThe Normalized Burn Ratio (NBR) is the ratio between NIR and SWIR, as shown by the equation below:\n\n\n\nimage.png\n\n\nThe Normalized Burn Ratio (NBR) is used to highlight burned areas and estimate burn severity, using near-infrared (NIR) and shortwave-infrared (SWIR) wavelengths. Healthy vegetation has very high NIR reflectance and low SWIR. Recently burned areas have a low NIR reflectance and high SWIR reflectance.\nThe spectral response curves of healthy vegetation versus burned vegetation is shown below. Since the two reach peak differences in the NIR and SWIR wavelengths, we can calculate the ratio of this difference to focus on where the August Complex fire burned.\n\n\n\nimage.png\n\n\nPreparing pre-fire and post-fire Normalized Burn Ratio (NBR) images:\n\npreNBR = pre_cm_mos.normalizedDifference(['B8', 'B12']);\npostNBR = post_cm_mos.normalizedDifference(['B8', 'B12']);"
  },
  {
    "objectID": "posts/SentinelNBR/dnbr2.html#creating-an-interactive-map-of-pre-fire-and-post-fire-nbrs",
    "href": "posts/SentinelNBR/dnbr2.html#creating-an-interactive-map-of-pre-fire-and-post-fire-nbrs",
    "title": "Environmental Data Science",
    "section": "Creating an interactive map of pre-fire and post-fire NBRs",
    "text": "Creating an interactive map of pre-fire and post-fire NBRs\n\n#Burn Ratio Product - Greyscale\ngrey = ['white', 'black'];\nleft_layer = geemap.ee_tile_layer(preNBR, {'min': -1, 'max': 1, 'palette': grey}, 'Prefire Normalized Burn Ratio')\nright_layer = geemap.ee_tile_layer(postNBR, {'min': -1, 'max': 1, 'palette': grey}, 'Postfire Normalized Burn Ratio')\n\nMaps =  geemap.Map(center=[39.9, -122.9], zoom=8.7)\n\nMaps.split_map(left_layer, right_layer)\nMaps"
  },
  {
    "objectID": "posts/SentinelNBR/dnbr2.html#adding-burn-severity-map-with-levels-of-severity",
    "href": "posts/SentinelNBR/dnbr2.html#adding-burn-severity-map-with-levels-of-severity",
    "title": "Environmental Data Science",
    "section": "Adding Burn Severity map with levels of severity",
    "text": "Adding Burn Severity map with levels of severity\n\n\n\nimage.png\n\n\nA higher value of dNBR indicates more severe damage, while areas with negative dNBR values may indicate regrowth following a fire.\nTable 1. Burn severity levels obtained calculating dNBR, proposed by USGS. \n\ndNBR_unscaled = preNBR.subtract(postNBR);\n\n#Scale product to USGS standards\ndNBR = dNBR_unscaled.multiply(1000);\n\n\nMap2 = geemap.Map(center=[39.9, -122.9], zoom=8.7)\nMap2\nMap2.add_basemap('SATELLITE')\n\n\n# dNBR greyscale\nMap2.addLayer(dNBR, {'min': -1000, 'max': 1000, 'palette': grey}, 'dNBR greyscale');\n\n\n#Define an SLD style of discrete intervals to apply to the image.\nsld_intervals = '<RasterSymbolizer>' + '<ColorMap type=\"intervals\" extended=\"false\" >' + '<ColorMapEntry color=\"#ffffff\" quantity=\"-500\" label=\"-500\"/>' + '<ColorMapEntry color=\"#7a8737\" quantity=\"-250\" label=\"-250\" />' + '<ColorMapEntry color=\"#acbe4d\" quantity=\"-100\" label=\"-100\" />' + '<ColorMapEntry color=\"#0ae042\" quantity=\"100\" label=\"100\" />' + '<ColorMapEntry color=\"#fff70b\" quantity=\"270\" label=\"270\" />' + '<ColorMapEntry color=\"#ffaf38\" quantity=\"440\" label=\"440\" />' + '<ColorMapEntry color=\"#ff641b\" quantity=\"660\" label=\"660\" />' + '<ColorMapEntry color=\"#a41fd6\" quantity=\"2000\" label=\"2000\" />' + '</ColorMap>' + '</RasterSymbolizer>';\n\n\nMap2.addLayer(dNBR.sldStyle(sld_intervals), {}, 'dNBR classified');\n#==========================================================================================\n#                                   ADD A LEGEND\n\nlegend_dict = {\n    \"Enhanced Regrowth, High\": '7a8737',\n    'Enhanced Regrowth, Low':  'acbe4d',\n    'Unburned': '0ae042',\n    'Low Severity': 'fff70b',\n    'Moderate-low Severity': 'ffaf38',\n    'Moderate-high Severity': 'ff641b',\n    'High Severity': 'a41fd6',\n    'NA': 'ffffff'}\n\n\nMap2.add_legend(legend_title = \"dNBR Classes\", legend_dict = legend_dict)\n\n\n ## Derive extent of burn severity classes\n\n\nthresholds = ee.Image([-1000, -251, -101, 99, 269, 439, 659, 2000]);\nclassified = dNBR.lt(thresholds).reduce('sum').toInt();\n\n\n#count number of pixels in entire layer\nallpix =  classified.updateMask(classified); #mask the entire layer\n\n\npixstats = allpix.reduceRegion(\n    reducer = ee.Reducer.count(),               # count pixels in a single class\n    geometry = aug_complex.geometry(),\n    scale = 30, \n    maxPixels = 10000000);\n\n\nallpixels = ee.Number(pixstats.get('sum')); # extract pixel count as a number\n\n\n#create an empty list to store area values in\narealist = [];\n\n\n# create a function to derive extent of one burn severity class\n#arguments are class number and class name\ndef areacount(cnr, name):\n    singleMask =  classified.updateMask(classified.eq(cnr)); # mask a single class // count pixels in a single class\n    stats = singleMask.reduceRegion(reducer = ee.Reducer.count(), geometry = aug_complex.geometry(), scale = 30, \n    maxPixels = 10000000);\n    pix =  ee.Number(stats.get('sum'));\n    hect = pix.multiply(900).divide(10000);               #Landsat pixel = 30m x 30m --> 900 sqm\n    perc = pix.divide(allpixels).multiply(10000).round().divide(100);   # get area percent by class and round to 2 decimals\n    arealist.append({'Class': name, 'Pixels': pix, 'Hectares': hect, 'Percentage': perc});\n\n# severity classes in different order\nnames2 = ['NA', 'High Severity', 'Moderate-high Severity',\n'Moderate-low Severity', 'Low Severity','Unburned', 'Enhanced Regrowth, Low', 'Enhanced Regrowth, High'];\n\n\ni = 0\nfor i in range(len(names2)):\n    if i < 8:\n        areacount(i, names2[i])\n        i + 1;\n\n\narealist\n\n[{'Class': 'NA',\n  'Pixels': <ee.ee_number.Number at 0x13e9dc550>,\n  'Hectares': <ee.ee_number.Number at 0x13e9dc760>,\n  'Percentage': <ee.ee_number.Number at 0x13e9dc0d0>},\n {'Class': 'High Severity',\n  'Pixels': <ee.ee_number.Number at 0x13e9dc220>,\n  'Hectares': <ee.ee_number.Number at 0x13e9dce50>,\n  'Percentage': <ee.ee_number.Number at 0x13e9c9160>},\n {'Class': 'Moderate-high Severity',\n  'Pixels': <ee.ee_number.Number at 0x13e9c9e80>,\n  'Hectares': <ee.ee_number.Number at 0x13e9c9400>,\n  'Percentage': <ee.ee_number.Number at 0x13e9c9d30>},\n {'Class': 'Moderate-low Severity',\n  'Pixels': <ee.ee_number.Number at 0x13e901520>,\n  'Hectares': <ee.ee_number.Number at 0x13e9b0370>,\n  'Percentage': <ee.ee_number.Number at 0x13e92c250>},\n {'Class': 'Low Severity',\n  'Pixels': <ee.ee_number.Number at 0x13e9f23a0>,\n  'Hectares': <ee.ee_number.Number at 0x13e9f2520>,\n  'Percentage': <ee.ee_number.Number at 0x13e9f2760>},\n {'Class': 'Unburned',\n  'Pixels': <ee.ee_number.Number at 0x13e9f2b20>,\n  'Hectares': <ee.ee_number.Number at 0x13e9f2ca0>,\n  'Percentage': <ee.ee_number.Number at 0x13e9f2ee0>},\n {'Class': 'Enhanced Regrowth, Low',\n  'Pixels': <ee.ee_number.Number at 0x13e9f52e0>,\n  'Hectares': <ee.ee_number.Number at 0x13e9f5460>,\n  'Percentage': <ee.ee_number.Number at 0x13e9f56a0>},\n {'Class': 'Enhanced Regrowth, High',\n  'Pixels': <ee.ee_number.Number at 0x13e9f5a60>,\n  'Hectares': <ee.ee_number.Number at 0x13e9f5be0>,\n  'Percentage': <ee.ee_number.Number at 0x13e9f5e20>}]\n\n\n\ntest = pd.DataFrame(arealist)\nprint(test)\n\n                     Class                                             Pixels  \\\n0                       NA  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n1            High Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n2   Moderate-high Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n3    Moderate-low Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n4             Low Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n5                 Unburned  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n6   Enhanced Regrowth, Low  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n7  Enhanced Regrowth, High  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n\n                                            Hectares  \\\n0  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n1  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n2  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n3  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n4  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n5  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n6  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n7  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n\n                                          Percentage  \n0  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n1  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n2  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n3  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n4  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n5  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n6  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n7  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n\n\n\n# Theres probably an easier way to extract the values but this works\n# pop each class into its own variable, then create a dictionary that uses .getInfo() on each value to convert from ee.Number to number\n\n#NA = arealist[0:1].pop()\n#High_Severity = arealist[0:2].pop()\n#Moderate_high_Severity = arealist[0:3].pop()\n#Moderate_low_Severity = arealist[0:4].pop()\n#Low_Severity = arealist[0:5].pop()\n#Unburned = arealist[0:6].pop()\n#Enhanced_Regrowth_Low = arealist[0:7].pop()\n#Enhanced_Regrowth_High = arealist[0:8].pop()\n\n\n# Takes quite  a while to run, so for the presentation I copied the results \n\n#stats = {'Class': ['NA', 'High Severity', 'Moderate-high Severity', 'Moderate-low Severity', 'Low Severity', 'Unburned', 'Enhanced Regrowth, Low', 'Enhanced Regrowth, High'], \n#  'Pixels': [NA['Pixels'].getInfo(), High_Severity['Pixels'].getInfo(), Moderate_high_Severity['Pixels'].getInfo(), Moderate_low_Severity['Pixels'].getInfo(), Low_Severity['Pixels'].getInfo(), Unburned['Pixels'].getInfo(), Enhanced_Regrowth_Low['Pixels'].getInfo(), Enhanced_Regrowth_High['Pixels'].getInfo() ],\n#  'Hectares': [NA['Hectares'].getInfo(), High_Severity['Hectares'].getInfo(), Moderate_high_Severity['Hectares'].getInfo(), Moderate_low_Severity['Hectares'].getInfo(), Low_Severity['Hectares'].getInfo(), Unburned['Hectares'].getInfo(), Enhanced_Regrowth_Low['Hectares'].getInfo(), Enhanced_Regrowth_High['Hectares'].getInfo()],\n#  'Percentage': [NA['Percentage'].getInfo(), High_Severity['Percentage'].getInfo(), Moderate_high_Severity['Percentage'].getInfo(), Moderate_low_Severity['Percentage'].getInfo(),Low_Severity['Percentage'].getInfo(), Unburned['Percentage'].getInfo(), Enhanced_Regrowth_Low['Percentage'].getInfo(),Enhanced_Regrowth_High['Percentage'].getInfo()]}\n\n\nstats = {'Class': ['NA',\n  'High Severity',\n  'Moderate-high Severity',\n  'Moderate-low Severity',\n  'Low Severity',\n  'Unburned',\n  'Enhanced Regrowth, Low',\n  'Enhanced Regrowth, High'],\n 'Pixels': [0, 1067623, 989630, 968749, 1061877, 1522197, 427507, 237862],\n 'Hectares': [0,\n  96086.07,\n  89066.7,\n  87187.41,\n  95568.93,\n  136997.73,\n  38475.63,\n  21407.58],\n 'Percentage': [0, 17.01, 15.77, 15.44, 16.92, 24.26, 6.81, 3.79]}\ndf_stats = pd.DataFrame(stats).set_index('Class')\ndf_stats\n\n\n\n\n\n  \n    \n      \n      Pixels\n      Hectares\n      Percentage\n    \n    \n      Class\n      \n      \n      \n    \n  \n  \n    \n      NA\n      0\n      0.00\n      0.00\n    \n    \n      High Severity\n      1067623\n      96086.07\n      17.01\n    \n    \n      Moderate-high Severity\n      989630\n      89066.70\n      15.77\n    \n    \n      Moderate-low Severity\n      968749\n      87187.41\n      15.44\n    \n    \n      Low Severity\n      1061877\n      95568.93\n      16.92\n    \n    \n      Unburned\n      1522197\n      136997.73\n      24.26\n    \n    \n      Enhanced Regrowth, Low\n      427507\n      38475.63\n      6.81\n    \n    \n      Enhanced Regrowth, High\n      237862\n      21407.58\n      3.79\n    \n  \n\n\n\n\n ### Use Case Discussion\nWe found that nearly half of the burned area was determined to be between Moderate-Low to High severity. Additionally, the High severity area was the second largest percentage of area classified.\n\ndf_stats['Hectares'].sort_values().plot.bar(color = ['gold', 'olive', 'darkkhaki'  , 'orange', 'orangered', 'yellow','purple', 'springgreen' ], width = 0.75)\nplt.ylabel('Hectares')\nplt.title('Burn Severity Analysis of 2020 August Complex Fire')\n\nText(0.5, 1.0, 'Burn Severity Analysis of 2020 August Complex Fire')\n\n\n\n\n\n\n# Pie Chart of Percentage by Class\ndf_stats.plot(kind = 'pie', y = 'Percentage',\n              colors = ['floralwhite', 'purple', 'orangered'  , 'orange', 'yellow', 'springgreen','darkkhaki', 'olive' ],\n             legend= False)\nplt.title('Burn Severity Analysis of 2020 August Complex Fire')\n\nText(0.5, 1.0, 'Burn Severity Analysis of 2020 August Complex Fire')\n\n\n\n\n\n ### Future Analyses\nWith more time, the data extracted could be analyzed with other characteristics of the environment, such as slope, aspect, wind direction, and humidity. These analyses would better inform wildfire researchers the nature of fires, how they spread, and what characteristics increase severity.\nAdditionally, this burn severity map can be compared to other wildfire burn severity maps as a function of time to see if the severity of the burns is getting worse. This would help inform wildfire researchers determine how quickly fires are increasingly negatively affecting the environment. Burn severity can also be compared temporally so that wildfire prevention can be implemented to the parts of the state most at risk.\n ### References\n\nSentinel data GEE page: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2\nUSFS MTBS Shapefile GEE page: https://developers.google.com/earth-engine/datasets/catalog/USFS_GTAC_MTBS_burned_area_boundaries_v1#description\nMTBS Project Page: https://www.mtbs.gov/\nStep by Step: Burn Severity mapping in Google Earth Engine https://code.earthengine.google.com/b455ba8cf4b5bee822bb7ff8935e6209"
  },
  {
    "objectID": "posts/SentinelNBR/dnbr.html",
    "href": "posts/SentinelNBR/dnbr.html",
    "title": "Environmental Data Science",
    "section": "",
    "text": "In this Jupyter Notebook, we first visualize true color images of the August Complex fire before and after it burned. Bands from the Sentinel 2 satellites as well as a dataset from USFS with wildfire boundaries are used for our analysis. Then, the Normalized Burn Ratio (NBR) is used to analyze burn severity, which is a measure of the degree to which a fire has affected the ecosystem. To compare these two images, we will compute the normalized difference to show where burn severity most significantly affected the vegetation and soil. We then added a scale to the normalized difference to show the levels of burn severity from the August Complex fire. Finally, we visualized the levels of severity to show the overall intensity. This link provides more information on the Sentinel 2 dataset that was used: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2.\n\n\n\nGuillermo Romero, Bren School of Environmental Science & Management, UCSB (romero61@ucsb.edu)\nWade Sedgewick, Bren School of Environmental Science & Management, UCSB (wsedgwick@ucsb.edu)\nHailey Veirs, Bren School of Environmental Science & Management, UCSB (hveirs@ucsb.edu)\n\n\n\n\n\nPurpose\nDataset Description\nData I/O\nMetadata Display\nTrue Color Visualization\nUse Case Examples\nUse Case Discussion\nReferences"
  },
  {
    "objectID": "posts/SentinelNBR/dnbr.html#nbrs-in-greyscale",
    "href": "posts/SentinelNBR/dnbr.html#nbrs-in-greyscale",
    "title": "Environmental Data Science",
    "section": "NBRs in greyscale",
    "text": "NBRs in greyscale\nThe Normalized Burn Ratio (NBR) is the ratio between NIR and SWIR, as shown by the equation below:\n\n\n\nimage.png\n\n\nThe Normalized Burn Ratio (NBR) is used to highlight burned areas and estimate burn severity, using near-infrared (NIR) and shortwave-infrared (SWIR) wavelengths. Healthy vegetation has very high NIR reflectance and low SWIR. Recently burned areas have a low NIR reflectance and high SWIR reflectance.\nThe spectral response curves of healthy vegetation versus burned vegetation is shown below. Since the two reach peak differences in the NIR and SWIR wavelengths, we can calculate the ratio of this difference to focus on where the August Complex fire burned.\n\n\n\nimage.png\n\n\nPreparing pre-fire and post-fire Normalized Burn Ratio (NBR) images:\n\npreNBR = pre_cm_mos.normalizedDifference(['B8', 'B12']);\npostNBR = post_cm_mos.normalizedDifference(['B8', 'B12']);"
  },
  {
    "objectID": "posts/SentinelNBR/dnbr.html#creating-an-interactive-map-of-pre-fire-and-post-fire-nbrs",
    "href": "posts/SentinelNBR/dnbr.html#creating-an-interactive-map-of-pre-fire-and-post-fire-nbrs",
    "title": "Environmental Data Science",
    "section": "Creating an interactive map of pre-fire and post-fire NBRs",
    "text": "Creating an interactive map of pre-fire and post-fire NBRs\n\n#Burn Ratio Product - Greyscale\ngrey = ['white', 'black'];\nleft_layer = geemap.ee_tile_layer(preNBR, {'min': -1, 'max': 1, 'palette': grey}, 'Prefire Normalized Burn Ratio')\nright_layer = geemap.ee_tile_layer(postNBR, {'min': -1, 'max': 1, 'palette': grey}, 'Postfire Normalized Burn Ratio')\n\nMaps =  geemap.Map(center=[39.9, -122.9], zoom=8.7)\n\nMaps.split_map(left_layer, right_layer)\nMaps"
  },
  {
    "objectID": "posts/SentinelNBR/dnbr.html#adding-burn-severity-map-with-levels-of-severity",
    "href": "posts/SentinelNBR/dnbr.html#adding-burn-severity-map-with-levels-of-severity",
    "title": "Environmental Data Science",
    "section": "Adding Burn Severity map with levels of severity",
    "text": "Adding Burn Severity map with levels of severity\n\n\n\nimage.png\n\n\nA higher value of dNBR indicates more severe damage, while areas with negative dNBR values may indicate regrowth following a fire.\nTable 1. Burn severity levels obtained calculating dNBR, proposed by USGS. \n\ndNBR_unscaled = preNBR.subtract(postNBR);\n\n#Scale product to USGS standards\ndNBR = dNBR_unscaled.multiply(1000);\n\n\nMap2 = geemap.Map(center=[39.9, -122.9], zoom=8.7)\nMap2\nMap2.add_basemap('SATELLITE')\n\n\n# dNBR greyscale\nMap2.addLayer(dNBR, {'min': -1000, 'max': 1000, 'palette': grey}, 'dNBR greyscale');\n\n\n#Define an SLD style of discrete intervals to apply to the image.\nsld_intervals = '<RasterSymbolizer>' + '<ColorMap type=\"intervals\" extended=\"false\" >' + '<ColorMapEntry color=\"#ffffff\" quantity=\"-500\" label=\"-500\"/>' + '<ColorMapEntry color=\"#7a8737\" quantity=\"-250\" label=\"-250\" />' + '<ColorMapEntry color=\"#acbe4d\" quantity=\"-100\" label=\"-100\" />' + '<ColorMapEntry color=\"#0ae042\" quantity=\"100\" label=\"100\" />' + '<ColorMapEntry color=\"#fff70b\" quantity=\"270\" label=\"270\" />' + '<ColorMapEntry color=\"#ffaf38\" quantity=\"440\" label=\"440\" />' + '<ColorMapEntry color=\"#ff641b\" quantity=\"660\" label=\"660\" />' + '<ColorMapEntry color=\"#a41fd6\" quantity=\"2000\" label=\"2000\" />' + '</ColorMap>' + '</RasterSymbolizer>';\n\n\nMap2.addLayer(dNBR.sldStyle(sld_intervals), {}, 'dNBR classified');\n#==========================================================================================\n#                                   ADD A LEGEND\n\nlegend_dict = {\n    \"Enhanced Regrowth, High\": '7a8737',\n    'Enhanced Regrowth, Low':  'acbe4d',\n    'Unburned': '0ae042',\n    'Low Severity': 'fff70b',\n    'Moderate-low Severity': 'ffaf38',\n    'Moderate-high Severity': 'ff641b',\n    'High Severity': 'a41fd6',\n    'NA': 'ffffff'}\n\n\nMap2.add_legend(legend_title = \"dNBR Classes\", legend_dict = legend_dict)\n\n\n ## Derive extent of burn severity classes\n\n\nthresholds = ee.Image([-1000, -251, -101, 99, 269, 439, 659, 2000]);\nclassified = dNBR.lt(thresholds).reduce('sum').toInt();\n\n\n#count number of pixels in entire layer\nallpix =  classified.updateMask(classified); #mask the entire layer\n\n\npixstats = allpix.reduceRegion(\n    reducer = ee.Reducer.count(),               # count pixels in a single class\n    geometry = aug_complex.geometry(),\n    scale = 30, \n    maxPixels = 10000000);\n\n\nallpixels = ee.Number(pixstats.get('sum')); # extract pixel count as a number\n\n\n#create an empty list to store area values in\narealist = [];\n\n\n# create a function to derive extent of one burn severity class\n#arguments are class number and class name\ndef areacount(cnr, name):\n    singleMask =  classified.updateMask(classified.eq(cnr)); # mask a single class // count pixels in a single class\n    stats = singleMask.reduceRegion(reducer = ee.Reducer.count(), geometry = aug_complex.geometry(), scale = 30, \n    maxPixels = 10000000);\n    pix =  ee.Number(stats.get('sum'));\n    hect = pix.multiply(900).divide(10000);               #Landsat pixel = 30m x 30m --> 900 sqm\n    perc = pix.divide(allpixels).multiply(10000).round().divide(100);   # get area percent by class and round to 2 decimals\n    arealist.append({'Class': name, 'Pixels': pix, 'Hectares': hect, 'Percentage': perc});\n\n# severity classes in different order\nnames2 = ['NA', 'High Severity', 'Moderate-high Severity',\n'Moderate-low Severity', 'Low Severity','Unburned', 'Enhanced Regrowth, Low', 'Enhanced Regrowth, High'];\n\n\ni = 0\nfor i in range(len(names2)):\n    if i < 8:\n        areacount(i, names2[i])\n        i + 1;\n\n\narealist\n\n[{'Class': 'NA',\n  'Pixels': <ee.ee_number.Number at 0x12ca9e670>,\n  'Hectares': <ee.ee_number.Number at 0x12ca9e880>,\n  'Percentage': <ee.ee_number.Number at 0x12ca9e9d0>},\n {'Class': 'High Severity',\n  'Pixels': <ee.ee_number.Number at 0x12ca9eaf0>,\n  'Hectares': <ee.ee_number.Number at 0x12c954b20>,\n  'Percentage': <ee.ee_number.Number at 0x12ca78460>},\n {'Class': 'Moderate-high Severity',\n  'Pixels': <ee.ee_number.Number at 0x12ca783a0>,\n  'Hectares': <ee.ee_number.Number at 0x12ca78640>,\n  'Percentage': <ee.ee_number.Number at 0x12ca78670>},\n {'Class': 'Moderate-low Severity',\n  'Pixels': <ee.ee_number.Number at 0x12ca88f40>,\n  'Hectares': <ee.ee_number.Number at 0x12c7781c0>,\n  'Percentage': <ee.ee_number.Number at 0x12c9c7fd0>},\n {'Class': 'Low Severity',\n  'Pixels': <ee.ee_number.Number at 0x12cab8160>,\n  'Hectares': <ee.ee_number.Number at 0x12cab82e0>,\n  'Percentage': <ee.ee_number.Number at 0x12cab8520>},\n {'Class': 'Unburned',\n  'Pixels': <ee.ee_number.Number at 0x12cab88e0>,\n  'Hectares': <ee.ee_number.Number at 0x12cab8a60>,\n  'Percentage': <ee.ee_number.Number at 0x12cab8ca0>},\n {'Class': 'Enhanced Regrowth, Low',\n  'Pixels': <ee.ee_number.Number at 0x12ca8df70>,\n  'Hectares': <ee.ee_number.Number at 0x12ca8ddf0>,\n  'Percentage': <ee.ee_number.Number at 0x12ca8dbb0>},\n {'Class': 'Enhanced Regrowth, High',\n  'Pixels': <ee.ee_number.Number at 0x12ca8d7f0>,\n  'Hectares': <ee.ee_number.Number at 0x12ca8d670>,\n  'Percentage': <ee.ee_number.Number at 0x12ca8d430>}]\n\n\n\ntest = pd.DataFrame(arealist)\nprint(test)\n\n                     Class                                             Pixels  \\\n0                       NA  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n1            High Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n2   Moderate-high Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n3    Moderate-low Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n4             Low Severity  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n5                 Unburned  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n6   Enhanced Regrowth, Low  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n7  Enhanced Regrowth, High  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n\n                                            Hectares  \\\n0  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n1  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n2  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n3  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n4  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n5  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n6  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n7  ee.Number({\\n  \"functionInvocationValue\": {\\n ...   \n\n                                          Percentage  \n0  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n1  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n2  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n3  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n4  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n5  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n6  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n7  ee.Number({\\n  \"functionInvocationValue\": {\\n ...  \n\n\n\n# Theres probably an easier way to extract the values but this works\n# pop each class into its own variable, then create a dictionary that uses .getInfo() on each value to convert from ee.Number to number\n\n#NA = arealist[0:1].pop()\n#High_Severity = arealist[0:2].pop()\n#Moderate_high_Severity = arealist[0:3].pop()\n#Moderate_low_Severity = arealist[0:4].pop()\n#Low_Severity = arealist[0:5].pop()\n#Unburned = arealist[0:6].pop()\n#Enhanced_Regrowth_Low = arealist[0:7].pop()\n#Enhanced_Regrowth_High = arealist[0:8].pop()\n\n\n# Takes quite  a while to run, so for the presentation I copied the results \n\n#stats = {'Class': ['NA', 'High Severity', 'Moderate-high Severity', 'Moderate-low Severity', 'Low Severity', 'Unburned', 'Enhanced Regrowth, Low', 'Enhanced Regrowth, High'], \n#  'Pixels': [NA['Pixels'].getInfo(), High_Severity['Pixels'].getInfo(), Moderate_high_Severity['Pixels'].getInfo(), Moderate_low_Severity['Pixels'].getInfo(), Low_Severity['Pixels'].getInfo(), Unburned['Pixels'].getInfo(), Enhanced_Regrowth_Low['Pixels'].getInfo(), Enhanced_Regrowth_High['Pixels'].getInfo() ],\n#  'Hectares': [NA['Hectares'].getInfo(), High_Severity['Hectares'].getInfo(), Moderate_high_Severity['Hectares'].getInfo(), Moderate_low_Severity['Hectares'].getInfo(), Low_Severity['Hectares'].getInfo(), Unburned['Hectares'].getInfo(), Enhanced_Regrowth_Low['Hectares'].getInfo(), Enhanced_Regrowth_High['Hectares'].getInfo()],\n#  'Percentage': [NA['Percentage'].getInfo(), High_Severity['Percentage'].getInfo(), Moderate_high_Severity['Percentage'].getInfo(), Moderate_low_Severity['Percentage'].getInfo(),Low_Severity['Percentage'].getInfo(), Unburned['Percentage'].getInfo(), Enhanced_Regrowth_Low['Percentage'].getInfo(),Enhanced_Regrowth_High['Percentage'].getInfo()]}\n\n\nstats = {'Class': ['NA',\n  'High Severity',\n  'Moderate-high Severity',\n  'Moderate-low Severity',\n  'Low Severity',\n  'Unburned',\n  'Enhanced Regrowth, Low',\n  'Enhanced Regrowth, High'],\n 'Pixels': [0, 1067623, 989630, 968749, 1061877, 1522197, 427507, 237862],\n 'Hectares': [0,\n  96086.07,\n  89066.7,\n  87187.41,\n  95568.93,\n  136997.73,\n  38475.63,\n  21407.58],\n 'Percentage': [0, 17.01, 15.77, 15.44, 16.92, 24.26, 6.81, 3.79]}\ndf_stats = pd.DataFrame(stats).set_index('Class')\ndf_stats\n\n\n\n\n\n  \n    \n      \n      Pixels\n      Hectares\n      Percentage\n    \n    \n      Class\n      \n      \n      \n    \n  \n  \n    \n      NA\n      0\n      0.00\n      0.00\n    \n    \n      High Severity\n      1067623\n      96086.07\n      17.01\n    \n    \n      Moderate-high Severity\n      989630\n      89066.70\n      15.77\n    \n    \n      Moderate-low Severity\n      968749\n      87187.41\n      15.44\n    \n    \n      Low Severity\n      1061877\n      95568.93\n      16.92\n    \n    \n      Unburned\n      1522197\n      136997.73\n      24.26\n    \n    \n      Enhanced Regrowth, Low\n      427507\n      38475.63\n      6.81\n    \n    \n      Enhanced Regrowth, High\n      237862\n      21407.58\n      3.79\n    \n  \n\n\n\n\n ### Use Case Discussion\nWe found that nearly half of the burned area was determined to be between Moderate-Low to High severity. Additionally, the High severity area was the second largest percentage of area classified.\n\ndf_stats['Hectares'].sort_values().plot.bar(color = ['gold', 'olive', 'darkkhaki'  , 'orange', 'orangered', 'yellow','purple', 'springgreen' ], width = 0.75)\nplt.ylabel('Hectares')\nplt.title('Burn Severity Analysis of 2020 August Complex Fire')\n\nText(0.5, 1.0, 'Burn Severity Analysis of 2020 August Complex Fire')\n\n\n\n\n\n\n# Pie Chart of Percentage by Class\ndf_stats.plot(kind = 'pie', y = 'Percentage',\n              colors = ['floralwhite', 'purple', 'orangered'  , 'orange', 'yellow', 'springgreen','darkkhaki', 'olive' ],\n             legend= False)\nplt.title('Burn Severity Analysis of 2020 August Complex Fire')\n\nText(0.5, 1.0, 'Burn Severity Analysis of 2020 August Complex Fire')\n\n\n\n\n\n ### Future Analyses\nWith more time, the data extracted could be analyzed with other characteristics of the environment, such as slope, aspect, wind direction, and humidity. These analyses would better inform wildfire researchers the nature of fires, how they spread, and what characteristics increase severity.\nAdditionally, this burn severity map can be compared to other wildfire burn severity maps as a function of time to see if the severity of the burns is getting worse. This would help inform wildfire researchers determine how quickly fires are increasingly negatively affecting the environment. Burn severity can also be compared temporally so that wildfire prevention can be implemented to the parts of the state most at risk.\n ### References\n\nSentinel data GEE page: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2\nUSFS MTBS Shapefile GEE page: https://developers.google.com/earth-engine/datasets/catalog/USFS_GTAC_MTBS_burned_area_boundaries_v1#description\nMTBS Project Page: https://www.mtbs.gov/\nStep by Step: Burn Severity mapping in Google Earth Engine https://code.earthengine.google.com/b455ba8cf4b5bee822bb7ff8935e6209"
  }
]